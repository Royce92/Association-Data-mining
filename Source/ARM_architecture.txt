 arm is a family of instruction set architectures for computer processors based on a reduced instruction set computing  risc  architecture developed by british company arm holdings     a risc based computer design approach means arm processors require significantly fewer transistors than typical cisc x   processors in most personal computers  this approach reduces costs  heat and power use  such reductions are desirable traits for light  portable  battery powered devices u   bincluding smartphones  laptops  tablet and notepad computers  and other embedded systems  a simpler design facilitates more efficient multi core cpus and higher core counts at lower cost  providing improved energy efficiency for servers        arm holdings develops the instruction set and architecture for arm based products  but does not manufacture products  the company periodically releases updates to its cores  current cores from arm holdings support a    bit address space and    bit arithmetic  the armv  a architecture  announced in october        adds support for a    bit address space and    bit arithmetic  instructions for arm holdings  cores have   xa bits wide fixed length instructions  but later versions of the architecture also support a variable length instruction set that provides both    and   xa bits wide instructions for improved code density  some cores can also provide hardware execution of java bytecodes     arm holdings licenses the chip designs and the arm instruction set architectures to third parties  who design their own products that implement one of those architectures u   bincluding systems on chips  soc  that incorporate memory  interfaces  radios  etc  currently  the widely used cortex cores  older  classic  cores  and specialized securcore cores variants are available for each of these to include or exclude optional capabilities  companies that make chips that implement an arm architecture include apple  appliedmicro  atmel  broadcom  cypress semiconductor  freescale semiconductor  nvidia  nxp  qualcomm  samsung electronics  st microelectronics and texas instruments  qualcomm introduced new three layer  d chip stacking in their         arm socs such as in their first   xa nm    bit octa core      globally arm is the most widely used instruction set architecture in terms of quantity produced          the low power consumption of arm processors has made them very popular  over    billion arm processors have been produced as of     update  of which    billion were produced in        and  arm based chips are found in nearly    percent of the world s mobile devices   the arm architecture     bit  is the most widely used architecture in mobile devices  and most popular    bit one in embedded systems    in       about     of all mobile phones sold used at least one arm processor    according to arm holdings  in      alone  producers of chips based on arm architectures reported shipments of    xa billion arm based processors  representing     of smartphones      of digital televisions and set top boxes and     of mobile computers             the british computer manufacturer acorn computers first developed arm  acorn risc machines  later called advanced risc machines  in the     s to use in its personal computers  its first arm based products were coprocessor modules for the bbc micro series of computers  after the successful bbc micro computer  acorn computers considered how to move on from the relatively simple mos technology      processor to address business markets like the one that was soon dominated by the ibm pc  launched in       the acorn business computer  abc  plan required that a number of second processors be made to work with the bbc micro platform  but processors such as the motorola       and national semiconductor       were considered unsuitable  and the      was not powerful enough for a graphics based user interface       according to sophie wilson  all the tested processors at that time performed about the same  with about a  mb second bandwidth       after testing all available processors and finding them lacking  acorn decided it needed a new architecture  inspired by white papers on the berkeley risc project  acorn considered designing its own processor    a visit to the western design center in phoenix  where the      was being updated by what was effectively a single person company  showed acorn engineers steve furber and sophie wilson they did not need massive resources and state of the art research and development facilities       wilson developed the instruction set  writing a simulation of the processor in bbc basic that ran on a bbc micro with a second      processor  this convinced acorn engineers they were on the right track  wilson approached acorn s ceo  hermann hauser  and requested more resources  once he had approval  he assembled a small team to implement wilson s model in hardware     the official acorn risc machine project started in october       they chose vlsi technology as the silicon partner  as they were a source of roms and custom chips for acorn  wilson and furber led the design  they implemented it with a similar efficiency ethos as the         a key design goal was achieving low latency input output  interrupt  handling like the       the      s memory access architecture had let developers produce fast machines without costly direct memory access hardware     the first samples of arm silicon worked properly when first received and tested on    april           the first arm application was as a second processor for the bbc micro  where it helped in developing simulation software to finish development of the support chips  vidc  ioc  memc   and sped up the cad software used in arm  development  wilson subsequently rewrote bbc basic in arm assembly language  the in depth knowledge gained from designing the instruction set enabled the code to be very dense  making arm bbc basic an extremely good test for any arm emulator  the original aim of a principally arm based computer was achieved in      with the release of the acorn archimedes    in       acorn once more won the queen s award for technology for the arm     the arm  featured a    bit data bus     bit address space and   xa    bit registers  eightxa bits from the program counter register were available for other purposes  the top sixxa bits  available because of the    bit address space   served as status flags  and the bottom twoxa bits  available because the program counter was always word aligned   were used for setting modes  the address bus was extended to   xa bits in the arm   but program code still had to lie within the first   xa mb of memory in    bit compatibility mode  due to the reserved bits for the status flags    the arm  had a transistor count of just         compared to motorola s six year older       model with around           much of this simplicity came from the lack of microcode  which represents about one quarter to one third of the        and from  like most cpus of the day  not including any cache  this simplicity enabled low power consumption  yet better performance than the intel        a successor  arm   was produced with a  xa kb cache  which further improved performance       in the late     s apple computer and vlsi technology started working with acorn on newer versions of the arm core  in       acorn spun off the design team into a new company named acorn risc machines ltd   which became arm ltd when its parent company  arm holdings plc  floated on the london stock exchange and nasdaq in            the new apple arm work would eventually evolve into the arm   first released in early       apple used the arm  based arm    as the basis for their apple newton pda  in       acorn used the arm    as the main central processing unit  cpu  in their riscpc computers  dec licensed the arm  architecture and produced the strongarm  at    xa mhz  this cpu drew only one watt  newer versions draw far less   this work was later passed to intel as a part of a lawsuit settlement  and intel took the opportunity to supplement their i    line with the strongarm  intel later developed its own high performance implementation named xscale  which it has since sold to marvell  transistor count of the arm core remained essentially the same size throughout these changes  arm  had       xa transistors  while arm  grew only to        citation needed    arm holdings  primary business is selling ip cores  which licensees use to create microcontrollers  mcus  and cpus based on those cores  the original design manufacturer combines the arm core with other parts to produce a complete cpu  typically one that can be built in existing semiconductor fabs at low cost and still deliver substantial performance  the most successful implementation has been the arm tdmi with hundreds of millions sold  atmel has been a precursor design center in the arm tdmi based embedded system     the arm architectures used in smartphones  pdas and other mobile devices range from armv   used in low end devices  through armv   to armv  in current high end devices  armv  includes a hardware floating point unit  fpu   with improved speed compared to software based floating point     in       some manufacturers introduced netbooks based on arm architecture cpus  in direct competition with netbooks based on intel atom    according to analyst firm ihs isuppli  by       arm ics may be in     of all laptops       arm holdings offers a variety of licensing terms  varying in cost and deliverables  arm holdings provides to all licensees an integratable hardware description of the arm core as well as complete software development toolset  compiler  debugger  software development kit  and the right to sell manufactured silicon containing the arm cpu     soc packages integrating arm s core designs include nvidia tegra s first three generations  csr plc s quatro family  st ericsson s nova and novathor  silicon labs s precision   mcu  texas instruments s omap products  samsung s hummingbird and exynos products  apple s a   a   and a x  and freescale s i mx     fabless licensees  who wish to integrate an arm core into their own chip design  are usually only interested in acquiring a ready to manufacture verified ip core  for these customers  arm holdings delivers a gate netlist description of the chosen arm core  along with an abstracted simulation model and test programs to aid design integration and verification  more ambitious customers  including integrated device manufacturers  idm  and foundry operators  choose to acquire the processor ip in synthesizable rtl  verilog  form  with the synthesizable rtl  the customer has the ability to perform architectural level optimisations and extensions  this allows the designer to achieve exotic design goals not otherwise possible with an unmodified netlist  high clock speed  very low power consumption  instruction set extensions  etc    while arm holdings does not grant the licensee the right to resell the arm architecture itself  licensees may freely sell manufactured product such as chip devices  evaluation boards and complete systems  merchant foundries can be a special case  not only are they allowed to sell finished silicon containing arm cores  they generally hold the right to re manufacture arm cores for other customers     arm holdings prices its ip based on perceived value  lower performing arm cores typically have lower licence costs than higher performing cores  in implementation terms  a synthesizable core costs more than a hard macro  blackbox  core  complicating price matters  a merchant foundry that holds an arm licence  such as samsung or fujitsu  can offer fab customers reduced licensing costs  in exchange for acquiring the arm core through the foundry s in house design services  the customer can reduce or eliminate payment of arm s upfront licence fee     compared to dedicated semiconductor foundries  such as tsmc and umc  without in house design services  fujitsu samsung charge two  to three times more per manufactured wafer citation needed for low to mid volume applications  a design service foundry offers lower overall pricing  through subsidisation of the licence fee   for high volume mass produced parts  the long term cost reduction achievable through lower wafer pricing reduces the impact of arm s nre  non recurring engineering  costs  making the dedicated foundry a better choice     companies can also obtain an arm architectural licence for designing their own cpu cores using the arm instruction sets  these cores must comply fully with the arm architecture     a list of vendors who implement arm cores in their design  application specific standard products  assp   microprocessor and microcontrollers  is provided by arm holdings       arm cores are used in a number of products  particularly pdas and smartphones  some computing examples are the microsoft surface  apple s ipad and asus eee pad transformer tablet computers  others include apple s iphone smartphone and ipod portable media player  canon powershot digital cameras  nintendo ds handheld game consoles and tomtom turn by turn navigation systems     in       arm holdings took part in the development of manchester university s computer  spinnaker  which used arm cores to simulate the human brain       arm chips are also used in raspberry pi  beagleboard  beaglebone  pandaboard and other single board computers  because they are very small  inexpensive and consume very little power     the    bit arm architecture  such as armv  a  is the most widely used architecture in mobile devices       from       the arm architecture reference manual has been the primary source of documentation on the arm processor architecture and instruction set  distinguishing interfaces that all arm processors are required to support  such as instruction semantics  from implementation details that may vary  the architecture has evolved over time  and version seven of the architecture  armv   that defines the architecture for the first of the cortex series of cores  defines three architecture  profiles      although the architecture profiles were first defined for armv   arm subsequently defined the armv  m architecture  used by the cortex m  m   m   as a subset of the armv  m profile with fewer instructions     except in the m profile  the    bit arm architecture specifies several cpu modes  depending on the implemented architecture features  at any moment in time  the cpu can be in only one mode  but it can switch modes due to external events  interrupts  or programmatically       the original  and subsequent  arm implementation was hardwired without microcode  like the much simpler   bit      processor used in prior acorn microcomputers     the    bit arm architecture  and the    bit architecture for the most part  includes the following risc features     to compensate for the simpler design  compared with processors like the intel       and motorola        some additional design features were used     arm includes integer arithmetic operations for add  subtract  and multiply  some versions of the architecture also support divide operations     arm supports    bit x    bit multiplies with either a    bit result or    bit result  though cortex m    m     m  cores don t support    bit results    some arm cores also support    bit x    bit and    bit x    bit multiplies     the divide instructions are only included in the following arm architectures     registers r  through r  are the same across all cpu modes  they are never banked     r   and r   are banked across all privileged cpu modes except system mode  that is  each mode that can be entered because of an exception has its own r   and r    these registers generally contain the stack pointer and the return address from function calls  respectively     aliases     the current program status register  cpsr  has the following   xa bits       almost every arm instruction has a conditional execution feature called predication  which is implemented with a   bit condition code selector  the predicate   to allow for unconditional execution  one of the four bit codes causes the instruction to be always executed  most other cpu architectures only have condition codes on branch instructions     though the predicate takes up four of the   xa bits in an instruction code  and thus cuts down significantly on the encoding bits available for displacements in memory access instructions  it avoids branch instructions when generating code for small if statements  apart from eliminating the branch instructions themselves  this preserves the fetch decode execute pipeline at the cost of only one cycle per skipped instruction     the standard example of conditional execution is the subtraction based euclidean algorithm     in the c programming language  the loop is     in arm assembly  the loop is     which avoids the branches around the then and else clauses  if ri and rj are equal then neither of the sub instructions will be executed  eliminating the need for a conditional branch to implement the while check at the top of the loop  for example had suble  less than or equal  been used     one of the ways that thumb code provides a more dense encoding is to remove the four bit selector from non branch instructions     another feature of the instruction set is the ability to fold shifts and rotates into the  data processing   arithmetic  logical  and register register move  instructions  so that  for example  the c statement    could be rendered as a single word  single cycle instruction       this results in the typical arm program being denser than expected with fewer memory accesses  thus the pipeline is used more efficiently     the arm processor also has features rarely seen in other risc architectures  such as pc relative addressing  indeed  on the    bit  arm the pc is one of its   xa registers  and pre  and post increment addressing modes     the arm instruction set has increased over time  some early arm processors  before arm tdmi   for example  have no instruction to store a two byte quantity     the arm  and earlier implementations have a three stage pipeline  the stages being fetch  decode and execute  higher performance designs  such as the arm   have deeper pipelines  cortex a  has thirteen stages  additional implementation changes for higher performance include a faster adder and more extensive branch prediction logic  the difference between the arm di and arm dmi cores  for example  was an improved multiplier  hence the added  m      the arm architecture  pre armv   provides a non intrusive way of extending the instruction set using  coprocessors  that can be addressed using mcr  mrc  mrrc  mcrr  and similar instructions  the coprocessor space is divided logically into   xa coprocessors with numbers from   to     coprocessorxa     cp    being reserved for some typical control functions like managing the caches and mmu operation on processors that have one     in arm based machines  peripheral devices are usually attached to the processor by mapping their physical registers into arm memory space  into the coprocessor space  or by connecting to another device  a bus  that in turn attaches to the processor  coprocessor accesses have lower latency  so some peripherals for example an xscale interrupt controller are accessible in both ways  through memory and through coprocessors     in other cases  chip designers only integrate hardware using the coprocessor mechanism  for example  an image processing engine might be a small arm tdmi core combined with a coprocessor that has specialised operations to support a specific set of hdtv transcoding primitives     all modern arm processors include hardware debugging facilities  allowing software debuggers to perform operations such as halting  stepping  and breakpointing of code starting from reset  these facilities are built using jtag support  though some newer cores optionally support arm s own two wire  swd  protocol  in arm tdmi cores  the  d  represented jtag debug support  and the  i  represented presence of an  embeddedice  debug module  for arm  and arm  core generations  embeddedice over jtag was a de facto debug standard  though not architecturally guaranteed     the armv  architecture defines basic debug facilities at an architectural level  these include breakpoints  watchpoints and instruction execution in a  debug mode   similar facilities were also available with embeddedice  both  halt mode  and  monitor  mode debugging are supported  the actual transport mechanism used to access the debug facilities is not architecturally specified  but implementations generally include jtag support     there is a separate arm  coresight  debug architecture  which is not architecturally required by armv  processors     to improve the arm architecture for digital signal processing and multimedia applications  dsp instructions were added to the set    these are signified by an  e  in the name of the armv te and armv tej architectures  e variants also imply t  d  m and i     the new instructions are common in digital signal processor architectures  they include variations on signed multiply accumulate  saturated add and subtract  and count leading zeros     introduced in armv  architecture and known as neon       jazelle dbx  direct bytecode execution  is a technique that allows java bytecode to be executed directly in the arm architecture as a third execution state  and instruction set  alongside the existing arm and thumb mode  support for this state is signified by the  j  in the armv tej architecture  and in arm ej s and arm ej s core names  support for this state is required starting in armv   except for the armv  m profile   though newer cores only include a trivial implementation that provides no hardware acceleration     to improve compiled code density  processors since the arm tdmi  released in         have featured the thumb instruction set  which have their own state   the  t  in  tdmi  indicates the thumb feature   when in this state  the processor executes the thumb instruction set  a compact    bit encoding for a subset of the arm instruction set    most of the thumb instructions are directly mapped to normal arm instructions  the space saving comes from making some of the instruction operands implicit and limiting the number of possibilities compared to the arm instructions executed in the arm instruction set state     in thumb  the    bit opcodes have less functionality  for example  only branches can be conditional  and many opcodes are restricted to accessing only half of all of the cpu s general purpose registers  the shorter opcodes give improved code density overall  even though some operations require extra instructions  in situations where the memory port or bus width is constrained to less than   xa bits  the shorter thumb opcodes allow increased performance compared with    bit arm code  as less program code may need to be loaded into the processor over the constrained memory bandwidth     embedded hardware  such as the game boy advance  typically have a small amount of ram accessible with a full    bit datapath  the majority is accessed via a    bit or narrower secondary datapath  in this situation  it usually makes sense to compile thumb code and hand optimise a few of the most cpu intensive sections using full    bit arm instructions  placing these wider instructions into the    bit bus accessible memory     the first processor with a thumb instruction decoder was the arm tdmi  all arm  and later families  including xscale  have included a thumb instruction decoder     thumb   technology was introduced in the arm    xa core  announced in       thumb   extends the limited    bit instruction set of thumb with additional    bit instructions to give the instruction set more breadth  thus producing a variable length instruction set  a stated aim for thumb   was to achieve code density similar to thumb with performance similar to the arm instruction set on    bit memory  in armv  this goal can be said to have been met citation needed    thumb   extends the thumb instruction set with bit field manipulation  table branches and conditional execution  at the same time  the arm instruction set was extended to maintain equivalent functionality in both instruction sets  a new  unified assembly language   ual  supports generation of either thumb or arm instructions from the same source code  versions of thumb seen on armv  processors are essentially as capable as arm code  including the ability to write interrupt handlers   this requires a bit of care  and use of a new  it   if then  instruction  which permits up to four successive instructions to execute based on a tested condition  or on its inverse  when compiling into arm code  this is ignored  but when compiling into thumb it generates an actual instruction  for example     all armv  chips support the thumb instruction set  all chips in the cortex a series  cortex r series  and arm   series support both  arm instruction set state  and  thumb instruction set state   while chips in the cortex m series support only the thumb instruction set           thumbee  erroneously called thumb  ee in some arm documentation   marketed as jazelle rct  runtime compilation target   was announced in       first appearing in the cortex a  processor  thumbee is a fourth instruction set state  making small changes to the thumb   extended thumb instruction set  these changes make the instruction set particularly suited to code generated at runtime  e g  by jit compilation  in managed execution environments  thumbee is a target for languages such as java  c   perl  and python  and allows jit compilers to output smaller compiled code without impacting performance     new features provided by thumbee include automatic null pointer checks on every load and store instruction  an instruction to perform an array bounds check  and special instructions that call a handler  in addition  because it utilises thumb   technology  thumbee provides access to registers r  r    where the jazelle dbx java vm state is held     handlers are small sections of frequently called code  commonly used to implement high level languages  such as allocating memory for a new object  these changes come from repurposing a handful of opcodes  and knowing the core is in the new thumbee instruction set state     on    november       arm holdings deprecated any use of the thumbee instruction set    and armv  removes support for thumbee     vfp  vector floating point  technology is an fpu  floating point unit  coprocessor extension to the arm architecture    implemented differently in armv    coprocessors not defined there   it provides low cost single precision and double precision floating point computation fully compliant with the ansi ieee std          standard for binary floating point arithmetic  vfp provides floating point computation suitable for a wide spectrum of applications such as pdas  smartphones  voice compression and decompression  three dimensional graphics and digital audio  printers  set top boxes  and automotive applications  the vfp architecture was intended to support execution of short  vector mode  instructions but these operated on each vector element sequentially and thus did not offer the performance of true single instruction  multiple data  simd  vector parallelism  this vector mode was therefore removed shortly after its introduction    to be replaced with the much more powerful neon advanced simd unit     some devices such as the arm cortex a  have a cut down vfplite module instead of a full vfp module  and require roughly ten times more clock cycles per float operation    pre armv  architecture implemented floating point simd with the coprocessor interface  other floating point and or simd units found in arm based processors using the coprocessor interface include fpa  fpe  iwmmxt  some of which where implemented in software by trapping but could have been implemented in hardware  they provide some of the same functionality as vfp but are not opcode compatible with it     in debian linux and derivatives armhf  arm hard float  refers to the armv  architecture including the additional vfp  d   floating point hardware extension  and thumb    above     the advanced simd extension  aka neon or  mpe  media processing engine  is a combined     and     bit simd instruction set that provides standardized acceleration for media and signal processing applications  neon is included in all cortex a  devices but is optional in cortex a  devices    neon can execute mp  audio decoding on cpus running at   xa mhz and can run the gsm adaptive multi rate  amr  speech codec at no more than   xa mhz  it features a comprehensive instruction set  separate register files and independent execution hardware    neon supports              and    bit integer and single precision     bit  floating point data and simd operations for handling audio and video processing as well as graphics and gaming processing  in neon  the simd supports up to   xa operations at the same time  the neon hardware shares the same floating point registers as used in vfp  devices such as the arm cortex a  and cortex a  support     bit vectors but will execute with   xa bits at a time    whereas newer cortex a   devices can execute    xa bits at a time     projectne   is arm s first open source project  from its inception   the ne   library is a set of common  useful functions written in both neon and c  for compatibility   the library was created to allow developers to use neon optimizations without learning neon but it also serves as a set of highly optimized neon intrinsic and assembly code examples for common dsp  arithmetic and image processing routines  the code is available on github     the security extensions  marketed as trustzone technology  is in armv kz and later application profile architectures  it provides a low cost alternative to adding another dedicated security core to an soc  by providing two virtual processors backed by hardware based access control  this lets the application core switch between two states  referred to as worlds  to reduce confusion with other names for capability domains   in order to prevent information from leaking from the more trusted world to the less trusted world  this world switch is generally orthogonal to all other capabilities of the processor  thus each world can operate independently of the other while using the same core  memory and peripherals are then made aware of the operating world of the core and may use this to provide access control to secrets and code on the device       typical applications of trustzone technology are to run a rich operating system in the less trusted world  and smaller security specialized code in the more trusted world  named trustzone software  a trustzone optimised version of the trusted foundations software developed by trusted logic mobility   allowing much tighter digital rights management for controlling the use of media on arm based devices    and preventing any unapproved use of the device  trusted foundations software was acquired by gemalto  giesecke   devrient developed a rival implementation named mobicore  in april      arm gemalto and giesecke   devrient combined their trustzone portfolios into a joint venture trustonic      open virtualization   and t    are open source implementations of the trusted world architecture for trustzone     in practice  since the specific implementation details of trustzone are proprietary and have not been publicly disclosed for review  it is unclear what level of assurance is provided for a given threat model citation needed    as of armv   the arm architecture supports no execute page protection  which is referred to as xn  for execute never       the large physical address extension  which extends the physical address size from    bits to    bits  was added to the armv  a architecture in            the armv  r sub architecture  announced after the armv  a  shares some features except that it is not    bit     announced in october        armv  a  often called armv  although not all variants are    bit such as armv  r  represents a fundamental change to the arm architecture  it adds a    bit architecture  named  aarch     and a new  a    instruction set  aarch   provides user space compatibility with armv  a isa  the    bit architecture  therein referred to as  aarch    and the old    bit instruction set  now named  a     the thumb instruction sets are referred to as  t    and have no    bit counterpart  armv  a allows    bit applications to be executed in a    bit os  and a    bit os to be under the control of a    bit hypervisor   arm announced their cortex a   and cortex a   cores on    october         apple was the first to release an armv  a compatible core  apple a   in a consumer product  iphone  s   appliedmicro  using an fpga  was the first to demo armv  a    the first armv  a soc from samsung is the exynos      in the galaxy note    which features two clusters of four cortex a   and cortex a   cores in a big little configuration  but it will run only in aarch   mode       to both aarch   and aarch    armv  a makes vfpv  v  and advanced simd  neon  standard  it also adds cryptography instructions supporting aes and sha   sha         in december       armv    a    an update with  incremental benefits over v      was announced  the enhancements fall into two categories     expected  product introductions mid       with server cpu makers likely to adopt and apple  will likely jump to the new architecture      the incremental updates in armv    a revolve around memory addressing  security  virtualization and throughput  armv  a code will run on v    cores      windows applications can be recompiled to run on    bit or    bit arm in linux with winelib              