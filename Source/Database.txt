 a database is an organized collection of data   the data is typically organized to model aspects of reality in a way that supports processes requiring information  for example  modelling the availability of rooms in hotels in a way that supports finding a hotel with vacancies     database management systems are computer software applications that interact with the user  other applications  and the database itself to capture and analyze data  a general purpose dbms is designed to allow the definition  creation  querying  update  and administration of databases  well known dbmss include mysql  postgresql  microsoft sql server  oracle  sybase and ibm db   a database is not generally portable across different dbmss  but different dbms can interoperate by using standards such as sql and odbc or jdbc to allow a single application to work with more than one dbms  database management systems are often classified according to the database model that they support  the most popular database systems since the     s have all supported the relational model as represented by the sql language  sometimes a dbms is loosely referred to as a  database              formally  a  database  refers to a set of related data and the way it is structured or organized  access to this data is usually provided by a  database management system   dbms  consisting of an integrated set of computer software that allows users to interact with one or more databases and provides access to all of the data contained in the database  although restrictions may exist that limit access to particular data   the dbms provides various functions that allow entry  storage and retrieval of large quantities of information as well as provide ways to manage how that information is organized     because of the close relationship between them  the term  database  is often used casually to refer to both a database and the dbms used to manipulate it     outside the world of professional information technology  the term database is often used to refer to any collection of related data  such as a spreadsheet or a card index   this article is concerned only with databases where the size and usage requirements necessitate use of a database management system      existing dbmss provide various functions that allow management of a database and its data which can be classified into four main functional groups     both a database and its dbms conform to the principles of a particular database model    database system  refers collectively to the database model  database management system  and database      physically  database servers are dedicated computers that hold the actual databases and run only the dbms and related software  database servers are usually multiprocessor computers  with generous memory and raid disk arrays used for stable storage  raid is used for recovery of data if any of the disks fail  hardware database accelerators  connected to one or more servers via a high speed channel  are also used in large volume transaction processing environments  dbmss are found at the heart of most database applications  dbmss may be built around a custom multitasking kernel with built in networking support  but modern dbmss typically rely on a standard operating system to provide these functions citation needed since dbmss comprise a significant economical market  computer and storage vendors often take into account dbms requirements in their own development plans citation needed    databases and dbmss can be categorized according to the database model s  that they support  such as relational or xml   the type s  of computer they run on  from a server cluster to a mobile phone   the query language s  used to access the database  such as sql or xquery   and their internal engineering  which affects performance  scalability  resilience  and security     databases are used to support internal operations of organizations and to underpin online interactions with customers and suppliers  see enterprise software      databases are used to hold administrative information and more specialized data  such as engineering data or economic models  examples of database applications include computerized library systems  flight reservation systems and computerized parts inventory systems     application areas of dbms       banking  for customer information  accounts  and loans  and banking transactions        airlines  for reservations and schedule information  airlines were among the first to use databases in a geographically distributed manner   terminals situated around the world accessed the central database system through phone lines and other data networks        universities  for student information  course registrations  and grades        credit card transactions  for purchases on credit cards and generation of monthly statements        telecommunication  for keeping records of calls made  generating monthly bills  maintaining balances on prepaid calling cards  and storing information about the communication networks        finance  for storing information about holdings  sales  and purchases of financial instruments such as stocks and bonds        sales  for customer  product  and purchase information        manufacturing  for management of supply chain and for tracking production of items in factories  inventories of items in warehouses   stores  and orders for items        human resources  for information about employees  salaries  payroll taxes and benefits  and for generation of paychecks     a dbms has evolved into a complex software system and its development typically requires thousands of person years of development effort   some general purpose dbmss such as adabas  oracle and db  have been undergoing upgrades since the     s  general purpose dbmss aim to meet the needs of as many applications as possible  which adds to the complexity  however  the fact that their development cost can be spread over a large number of users means that they are often the most cost effective approach  however  a general purpose dbms is not always the optimal solution  in some cases a general purpose dbms may introduce unnecessary overhead  therefore  there are many examples of systems that use special purpose databases  a common example is an email system that performs many of the functions of a general purpose dbms such as the insertion and deletion of messages composed of various items of data or associating messages with a particular email address  but these functions are limited to what is required to handle email and don t provide the user with the all of the functionality that would be available using a general purpose dbms     many other databases have application software that accesses the database on behalf of end users  without exposing the dbms interface directly  application programmers may use a wire protocol directly  or more likely through an application programming interface  database designers and database administrators interact with the dbms through dedicated interfaces to build and maintain the applications  databases  and thus need some more knowledge and understanding about how dbmss operate and the dbmss  external interfaces and tuning parameters     following the technology progress in the areas of processors  computer memory  computer storage and computer networks  the sizes  capabilities  and performance of databases and their respective dbmss have grown in orders of magnitude  the development of database technology can be divided into three eras based on data model or structure  navigational   sql relational  and post relational     the two main early navigational data models were the hierarchical model  epitomized by ibm s ims system  and the codasyl model  network model   implemented in a number of products such as idms     the relational model  first proposed in      by edgar f  codd  departed from this tradition by insisting that applications should search for data by content  rather than by following links  the relational model employs sets of ledger style tables  each used for a different type of entity  only in the mid     s did computing hardware become powerful enough to allow the wide deployment of relational systems  dbmss plus applications   by the early     s  however  relational systems dominated in all large scale data processing applications  and as of     update they remain dominantxa   oracle  mysql and sql server are the top dbms    the dominant database language  standardised sql for the relational model  has influenced database languages for other data models citation needed    object databases were developed in the     s to overcome the inconvenience of object relational impedance mismatch  which led to the coining of the term  post relational  and also the development of hybrid object relational databases     the next generation of post relational databases in the late     s became known as nosql databases  introducing fast key value stores and document oriented databases  a competing  next generation  known as newsql databases attempted new implementations that retained the relational sql model while aiming to match the high performance of nosql compared to commercially available relational dbmss     the introduction of the term database coincided with the availability of direct access storage  disks and drums  from the mid     s onwards  the term represented a contrast with the tape based systems of the past  allowing shared interactive use rather than daily batch processing  the oxford english dictionary cites   a      report by the system development corporation of california as the first to use the term  data base  in a specific technical sense     as computers grew in speed and capability  a number of general purpose database systems emerged  by the mid     s a number of such systems had come into commercial use  interest in a standard began to grow  and charles bachman  author of one such product  the integrated data store  ids   founded the  database task group  within codasyl  the group responsible for the creation and standardization of cobol  in      the database task group delivered their standard  which generally became known as the  codasyl approach   and soon a number of commercial products based on this approach entered the market     the codasyl approach relied on the  manual  navigation of a linked data set which was formed into a large network  applications could find records by one of three methods     later systems added b trees to provide alternate access paths  many codasyl databases also added a very straightforward query language  however  in the final tally  codasyl was very complex and required significant training and effort to produce useful applications     ibm also had their own dbms in       known as information management system  ims   ims was a development of software written for the apollo program on the system      ims was generally similar in concept to codasyl  but used a strict hierarchy for its model of data navigation instead of codasyl s network model  both concepts later became known as navigational databases due to the way data was accessed  and bachman s      turing award presentation was the programmer as navigator  ims is classifiedby whom  as a hierarchical database  idms and cincom systems  total database are classified as network databases  ims remains in use as of     update       edgar codd worked at ibm in san jose  california  in one of their offshoot offices that was primarily involved in the development of hard disk systems  he was unhappy with the navigational model of the codasyl approach  notably the lack of a  search  facility  in       he wrote a number of papers that outlined a new approach to database construction that eventually culminated in the groundbreaking a relational model of data for large shared data banks       in this paper  he described a new system for storing and working with large databases  instead of records being stored in some sort of linked list of free form records as in codasyl  codd s idea was to use a  table  of fixed length records  with each table used for a different type of entity  a linked list system would be very inefficient when storing  sparse  databases where some of the data for any one record could be left empty  the relational model solved this by splitting the data into a series of normalized tables  or relations   with optional elements being moved out of the main table to where they would take up room only if needed  data may be freely inserted  deleted and edited in these tables  with the dbms doing whatever maintenance needed to present a table view to the application user     the relational model also allowed the content of the database to evolve without constant rewriting of links and pointers  the relational part comes from entities referencing other entities in what is known as one to many relationship  like a traditional hierarchical model  and many to many relationship  like a navigational  network  model  thus  a relational model can express both hierarchical and navigational models  as well as its native tabular model  allowing for pure or combined modeling in terms of these three models  as the application requires     for instance  a common use of a database system is to track information about users  their name  login information  various addresses and phone numbers  in the navigational approach all of these data would be placed in a single record  and unused items would simply not be placed in the database  in the relational approach  the data would be normalized into a user table  an address table and a phone number table  for instance   records would be created in these optional tables only if the address or phone numbers were actually provided     linking the information back together is the key to this system  in the relational model  some bit of information was used as a  key   uniquely defining a particular record  when information was being collected about a user  information stored in the optional tables would be found by searching for this key  for instance  if the login name of a user is unique  addresses and phone numbers for that user would be recorded with the login name as its key  this simple  re linking  of related data back into a single collection is something that traditional computer languages are not designed for     just as the navigational approach would require programs to loop in order to collect records  the relational approach would require loops to collect information about any one record  codd s solution to the necessary looping was a set oriented language  a suggestion that would later spawn the ubiquitous sql  using a branch of mathematics known as tuple calculus  he demonstrated that such a system could support all the operations of normal databases  inserting  updating etc   as well as providing a simple system for finding and returning sets of data in a single operation     codd s paper was picked up by two people at berkeley  eugene wong and michael stonebraker  they started a project known as ingres using funding that had already been allocated for a geographical database project and student programmers to produce code  beginning in       ingres delivered its first test products which were generally ready for widespread use in       ingres was similar to system r in a number of ways  including the use of a  language  for data access  known as quel  over time  ingres moved to the emerging sql standard     ibm itself did one test implementation of the relational model  prtv  and a production one  business system     both now discontinued  honeywell wrote mrds for multics  and now there are two new implementations  alphora dataphor and rel  most other dbms implementations usually called relational are actually sql dbmss     in       the university of michigan began development of the micro information management system   based on d l  childs  set theoretic data model        micro was used to manage very large data sets by the us department of labor  the u s  environmental protection agency  and researchers from the university of alberta  the university of michigan  and wayne state university  it ran on ibm mainframe computers using the michigan terminal system    the system remained in production until          in the     s and     s attempts were made to build database systems with integrated hardware and software  the underlying philosophy was that such integration would provide higher performance at lower cost  examples were ibm system     the early offering of teradata  and the britton lee  inc  database machine     another approach to hardware support for database management was icl s cafs accelerator  a hardware disk controller with programmable search capabilities  in the long term  these efforts were generally unsuccessful because specialized database machines could not keep pace with the rapid development and progress of general purpose computers  thus most database systems nowadays are software systems running on general purpose hardware  using general purpose computer data storage  however this idea is still pursued for certain applications by some companies like netezza and oracle  exadata      ibm started working on a prototype system loosely based on codd s concepts as system r in the early     s  the first version was ready in         and work then started on multi table systems in which the data could be split so that all of the data for a record  some of which is optional  did not have to be stored in a single large  chunk   subsequent multi user versions were tested by customers in      and       by which time a standardized query language   sqlcitation needed   had been added  codd s ideas were establishing themselves as both workable and superior to codasyl  pushing ibm to develop a true production version of system r  known as sql ds  and  later  database    db       larry ellison s oracle started from a different chain  based on ibm s papers on system r  and beat ibm to market when the first version was released in      citation needed    stonebraker went on to apply the lessons from ingres to develop a new database  postgres  which is now known as postgresql  postgresql is often used for global mission critical applications  the  org and  info domain name registries use it as their primary data store  as do many large companies and financial institutions      in sweden  codd s paper was also read and mimer sql was developed from the mid     s at uppsala university  in       this project was consolidated into an independent enterprise  in the early     s  mimer introduced transaction handling for high robustness in applications  an idea that was subsequently implemented on most other dbmss     another data model  the entity relationship model  emerged in      and gained popularity for database design as it emphasized a more familiar description than the earlier relational model  later on  entity relationship constructs were retrofitted as a data modeling construct for the relational model  and the difference between the two have become irrelevant citation needed    the     s ushered in the age of desktop computing  the new computers empowered their users with spreadsheets like lotus       and database software like dbase  the dbase product was lightweight and easy for any computer user to understand out of the box  c  wayne ratliff the creator of dbase stated   dbase was different from programs like basic  c  fortran  and cobol in that a lot of the dirty work had already been done  the data manipulation is done by dbase instead of by the user  so the user can concentrate on what he is doing  rather than having to mess with the dirty details of opening  reading  and closing files  and managing space allocation     dbase was one of the top selling software titles in the     s and early     s     the     s  along with a rise in object oriented programming  saw a growth in how data in various databases were handled  programmers and designers began to treat the data in their databases as objects  that is to say that if a person s data were in a database  that person s attributes  such as their address  phone number  and age  were now considered to belong to that person instead of being extraneous data  this allows for relations between data to be relations to objects and their attributes and not to individual fields    the term  object relational impedance mismatch  described the inconvenience of translating between programmed objects and database tables  object databases and object relational databases attempt to solve this problem by providing an object oriented language  sometimes as extensions to sql  that programmers can use as alternative to purely relational sql  on the programming side  libraries known as object relational mappings  orms  attempt to solve the same problem     the next generation of post relational databases in the     s became known as nosql databases  including fast key value stores and document oriented databases     xml databases are a type of structured document oriented database that allows querying based on xml document attributes  xml databases are mostly used in enterprise database management  where xml is being used as the machine to machine data interoperability standard  xml database management systems include commercial software marklogic and oracle berkeley db xml  and a free use software clusterpoint distributed xml json database  all are enterprise software database platforms and support industry standard acid compliant transaction processing with strong database consistency characteristics and high level of database security           nosql databases are often very fast  do not require fixed table schemas  avoid join operations by storing denormalized data  and are designed to scale horizontally  the most popular nosql systems include mongodb  couchbase  riak  memcached  redis  couchdb  hazelcast  apache cassandra and hbase    which are all open source software products     in recent years there was a high demand for massively distributed databases with high partition tolerance but according to the cap theorem it is impossible for a distributed system to simultaneously provide consistency  availability and partition tolerance guarantees  a distributed system can satisfy any two of these guarantees at the same time  but not all three  for that reason many nosql databases are using what is called eventual consistency to provide both availability and partition tolerance guarantees with a reduced level of data consistency     newsql is a class of modern relational databases that aims to provide the same scalable performance of nosql systems for online transaction processing  read write  workloads while still using sql and maintaining the acid guarantees of a traditional database system  such databases include scalebase  clustrix  enterprisedb  memsql  nuodb   and voltdb     database technology has been an active research topic since the     s  both in academia and in the research and development groups of companies  for example ibm research   research activity includes theory and development of prototypes  notable research topics have included models  the atomic transaction concept and related concurrency control techniques  query languages and query optimization methods  raid  and more     the database research area has several dedicated academic journals  for example  acm transactions on database systems tods  data and knowledge engineering dke  and annual conferences  e g   acm sigmod  acm pods  vldb  ieee icde      one way to classify databases involves the type of their contents  for example  bibliographic  document text  statistical  or multimedia objects  another way is by their application area  for example  accounting  music compositions  movies  banking  manufacturing  or insurance  a third way is by some technical aspect  such as the database structure or interface type  this section lists a few of the adjectives used to characterize different kinds of databases     the first task of a database designer is to produce a conceptual data model that reflects the structure of the information to be held in the database  a common approach to this is to develop an entity relationship model  often with the aid of drawing tools  another popular approach is the unified modeling language  a successful data model will accurately reflect the possible state of the external world being modeled  for example  if people can have more than one phone number  it will allow this information to be captured  designing a good conceptual data model requires a good understanding of the application domain  it typically involves asking deep questions about the things of interest to an organisation  like  can a customer also be a supplier    or  if a product is sold with two different forms of packaging  are those the same product or different products    or  if a plane flies from new york to dubai via frankfurt  is that one flight or two  or maybe even three     the answers to these questions establish definitions of the terminology used for entities  customers  products  flights  flight segments  and their relationships and attributes     producing the conceptual data model sometimes involves input from business processes  or the analysis of workflow in the organization  this can help to establish what information is needed in the database  and what can be left out  for example  it can help when deciding whether the database needs to hold historic data as well as current data     having produced a conceptual data model that users are happy with  the next stage is to translate this into a schema that implements the relevant data structures within the database  this process is often called logical database design  and the output is a logical data model expressed in the form of a schema  whereas the conceptual data model is  in theory at least  independent of the choice of database technology  the logical data model will be expressed in terms of a particular database model supported by the chosen dbms   the terms data model and database model are often used interchangeably  but in this article we use data model for the design of a specific database  and database model for the modelling notation used to express that design      the most popular database model for general purpose databases is the relational model  or more precisely  the relational model as represented by the sql language  the process of creating a logical database design using this model uses a methodical approach known as normalization  the goal of normalization is to ensure that each elementary  fact  is only recorded in one place  so that insertions  updates  and deletions automatically maintain consistency     the final stage of database design is to make the decisions that affect performance  scalability  recovery  security  and the like  this is often called physical database design  a key goal during this stage is data independence  meaning that the decisions made for performance optimization purposes should be invisible to end users and applications  physical design is driven mainly by performance requirements  and requires a good knowledge of the expected workload and access patterns  and a deep understanding of the features offered by the chosen dbms     another aspect of physical database design is security  it involves both defining access control to database objects as well as defining security levels and methods for the data itself     a database model is a type of data model that determines the logical structure of a database and fundamentally determines in which manner data can be stored  organized  and manipulated  the most popular example of a database model is the relational model  or the sql approximation of relational   which uses a table based format     common logical data models for databases include     an object relational database combines the two related structures     physical data models include     other models include     a database management system provides three views of the database data     while there is typically only one conceptual  or logical  and physical  or internal  view of the data  there can be any number of different external views  this allows users to see database information in a more business related way rather than from a technical  processing viewpoint  for example  a financial department of a company needs the payment details of all employees as part of the company s expenses  but does not need details about employees that are the interest of the human resources department  thus different departments need different views of the company s database     the three level database architecture relates to the concept of data independence which was one of the major initial driving forces of the relational model  the idea is that changes made at a certain level do not affect the view at a higher level  for example  changes in the internal level do not affect application programs written using conceptual level interfaces  which reduces the impact of making physical changes to improve performance     the conceptual view provides a level of indirection between internal and external  on one hand it provides a common view of the database  independent of different external view structures  and on the other hand it abstracts away details of how the data is stored or managed  internal level   in principle every level  and even every external view  can be presented by a different data model  in practice usually a given dbms uses the same data model for both the external and the conceptual levels  e g   relational model   the internal level  which is hidden inside the dbms and depends on its implementation  see implementation section below   requires a different level of detail and uses its own types of data structure types     separating the external  conceptual and internal levels was a major feature of the relational database model implementations that dominate   st century databases       database languages are special purpose languages  which do one or more of the following     database languages are specific to a particular data model  notable examples include     a database language may also incorporate features like     because of the critical importance of database technology to the smooth running of an enterprise  database systems include complex mechanisms to deliver the required performance  security  and availability  and allow database administrators to control the use of these features     database storage is the container of the physical materialization of a database  it comprises the internal  physical  level in the database architecture  it also contains all the information needed  e g   metadata   data about the data   and internal data structures  to reconstruct the conceptual level and external level from the internal level when needed  putting data into permanent storage is generally the responsibility of the database engine a k a   storage engine   though typically accessed by a dbms through the underlying operating system  and often utilizing the operating systems  file systems as intermediates for storage layout   storage properties and configuration setting are extremely important for the efficient operation of the dbms  and thus are closely maintained by database administrators  a dbms  while in operation  always has its database residing in several types of storage  e g   memory and external storage   the database data and the additional needed information  possibly in very large amounts  are coded into bits  data typically reside in the storage in structures that look completely different from the way the data look in the conceptual and external levels  but in ways that attempt to optimize  the best possible  these levels  reconstruction when needed by users and programs  as well as for computing additional types of needed information from the data  e g   when querying the database      some dbmss support specifying which character encoding was used to store data  so multiple encodings can be used in the same database     various low level database storage structures are used by the storage engine to serialize the data model so it can be written to the medium of choice  techniques such as indexing may be used to improve performance  conventional storage is row oriented  but there are also column oriented and correlation databases     often storage redundancy is employed to increase performance  a common example is storing materialized views  which consist of frequently needed external views or query results  storing such views saves the expensive computing of them each time they are needed  the downsides of materialized views are the overhead incurred when updating them to keep them synchronized with their original updated database data  and the cost of storage redundancy     occasionally a database employs storage redundancy by database objects replication  with one or more copies  to increase data availability  both to improve performance of simultaneous multiple end user accesses to a same database object  and to provide resiliency in a case of partial failure of a distributed database   updates of a replicated object need to be synchronized across the object copies  in many cases the entire database is replicated     database security deals with all various aspects of protecting the database content  its owners  and its users  it ranges from protection from intentional unauthorized database uses to unintentional database accesses by unauthorized entities  e g   a person or a computer program      database access control deals with controlling who  a person or a certain computer program  is allowed to access what information in the database  the information may comprise specific database objects  e g   record types  specific records  data structures   certain computations over certain objects  e g   query types  or specific queries   or utilizing specific access paths to the former  e g   using specific indexes or other data structures to access information   database access controls are set by special authorized  by the database owner  personnel that uses dedicated protected security dbms interfaces     this may be managed directly on an individual basis  or by the assignment of individuals and privileges to groups  or  in the most elaborate models  through the assignment of individuals and groups to roles which are then granted entitlements  data security prevents unauthorized users from viewing or updating the database  using passwords  users are allowed access to the entire database or subsets of it called  subschemas   for example  an employee database can contain all the data about an individual employee  but one group of users may be authorized to view only payroll data  while others are allowed access to only work history and medical data  if the dbms provides a way to interactively enter and update the database  as well as interrogate it  this capability allows for managing personal databases     data security in general deals with protecting specific chunks of data  both physically  i e   from corruption  or destruction  or removal  e g   see physical security   or the interpretation of them  or parts of them to meaningful information  e g   by looking at the strings of bits that they comprise  concluding specific valid credit card numbers  e g   see data encryption      change and access logging records who accessed which attributes  what was changed  and when it was changed  logging services allow for a forensic database audit later by keeping a record of access occurrences and changes  sometimes application level code is used to record changes rather than leaving this to the database  monitoring can be set up to attempt to detect security breaches     database transactions can be used to introduce some level of fault tolerance and data integrity after recovery from a crash  a database transaction is a unit of work  typically encapsulating a number of operations over a database  e g   reading a database object  writing  acquiring lock  etc    an abstraction supported in database and also other systems  each transaction has well defined boundaries in terms of which program code executions are included in that transaction  determined by the transaction s programmer via special transaction commands      the acronym acid describes some ideal properties of a database transaction  atomicity  consistency  isolation  and durability     a database built with one dbms is not portable to another dbms  i e   the other dbms cannot run it   however  in some situations it is desirable to move  migrate a database from one dbms to another  the reasons are primarily economical  different dbmss may have different total costs of ownership or tcos   functional  and operational  different dbmss may have different capabilities   the migration involves the database s transformation from one dbms type to another  the transformation should maintain  if possible  the database related application  i e   all related application programs  intact  thus  the database s conceptual and external architectural levels should be maintained in the transformation  it may be desired that also some aspects of the architecture internal level are maintained  a complex or large database migration may be a complicated and costly  one time  project by itself  which should be factored into the decision to migrate  this in spite of the fact that tools may exist to help migration between specific dbmss  typically a dbms vendor provides tools to help importing databases from other popular dbmss     after designing a database for an application  the next stage is building the database  typically an appropriate general purpose dbms can be selected to be utilized for this purpose  a dbms provides the needed user interfaces to be utilized by database administrators to define the needed application s data structures within the dbms s respective data model  other user interfaces are used to select needed dbms parameters  like security related  storage allocation parameters  etc       when the database is ready  all its data structures and other needed components are defined  it is typically populated with initial application s data  database initialization  which is typically a distinct project  in many cases using specialized dbms interfaces that support bulk insertion  before making it operational  in some cases the database becomes operational while empty of application data  and data is accumulated during its operation     after the database is created  initialised and populated it needs to be maintained  various database parameters may need changing and the database may need to be tuned  tuning  for better performance  application s data structures may be changed or added  new related application programs may be written to add to the application s functionality  etc     sometimes it is desired to bring a database back to a previous state  for many reasons  e g   cases when the database is found corrupted due to a software error  or if it has been updated with erroneous data   to achieve this a backup operation is done occasionally or continuously  where each desired database state  i e   the values of its data and their embedding in database s data structures  is kept within dedicated backup files  many techniques exist to do this effectively   when this state is needed  i e   when it is decided by a database administrator to bring the database back to this state  e g   by specifying this state by a desired point in time when the database was in this state   these files are utilized to restore that state     other dbms features might include  