 google app engine  often referred to as gae or simply app engine  is a platform as a service  paas  cloud computing platform for developing and hosting web applications in google managed data centers  applications are sandboxed and run across multiple servers   app engine offers automatic scaling for web applications as the number of requests increases for an application  app engine automatically allocates more resources for the web application to handle the additional demand      google app engine is free up to a certain level of consumed resources  fees are charged for additional storage  bandwidth  or instance hours required by the application   it was first released as a preview version in april      and came out of preview in september                  currently  the supported programming languages are python  java  and  by extension  other jvm languages such as groovy  jruby  scala  clojure   go  and php  go and php are in experimental status   google has said that it plans to support more languages in the future  and that the google app engine has been written to be language independent      python web frameworks that run on google app engine include django  cherrypy  pyramid  flask  web py and webapp    as well as a custom google written webapp framework and several others designed specifically for the platform that emerged since the release   any python framework that supports the wsgi using the cgi adapter can be used to create an application  the framework can be uploaded with the developed application  third party libraries written in pure python may also be uploaded       google app engine supports many java standards and frameworks  core to this is the servlet     technology using the open source jetty web server    along with accompanying technologies such as jsp  javaserver faces operates with some workarounds  though the datastore used may be unfamiliar to programmers  it is easily accessed and supported with jpa  jdo and other methods of reading and writing data are also provided  the spring framework works with gae  however the spring security module  if used  requires workarounds  apache struts   is supported  and struts   runs with workarounds       the django web framework and applications running on it can be used on app engine with modification  django nonrel   aims to allow django to work with non relational databases and the project includes support for app engine       all billed high replication datastore app engine applications have a        uptime sla       app engine is designed in such a way that it can sustain multiple datacenter outages without any downtime  this resilience to downtime is shown by the statistic that the high replication datastore saw    downtime over a period of a year       paid support from google engineers is offered as part of premier accounts    free support is offered in the app engine groups and stack overflow  however assistance by a google staff member is not guaranteed     sdk version       adds support for bulk downloads of data using python    the open source python projects gaebar    approcket    and gawsh   also allow users to download and backup app engine data  no method for bulk downloading data from gae using java currently exists     compared to other scalable hosting services such as amazon ec   app engine provides more infrastructure to make it easy to write scalable applications  but can only run a limited range of applications designed for that infrastructure     app engine s infrastructure removes many of the system administration and development challenges of building applications to scale to hundreds of requests per second and beyond    google handles deploying code to a cluster  monitoring  failover  and launching application instances as necessary     while other services let users install and configure nearly any  nix compatible software  app engine requires developers to use only its supported languages  apis  and frameworks  current apis allow storing and retrieving data from a bigtable non relational database  making http requests  sending e mail  manipulating images  and caching  existing web applications that require a relational database will not run on app engine datastore without modification  google cloud sql can be used for app engine applications requiring a relational mysql compatible database backend       per day and per minute quotas restrict bandwidth and cpu use  number of requests served  number of concurrent requests  and calls to the various apis  and individual requests are terminated if they take more than    seconds or return more than   mb of data     google app engine s datastore has a sql like syntax called  gql   gql intentionally does not support the join statement  because it seems to be inefficient when queries span more than one machine    instead  one to many and many to many relationships can be accomplished using referenceproperty      this shared nothing approach allows disks to fail without the system failing    switching from a relational database to the datastore requires a paradigm shift for developers when modeling their data     unlike a relational database the datastore api is not relational in the sql sense     the java version supports asynchronous non blocking queries using the twig object datastore   interface  this offers an alternative to using threads for parallel data processing     developers worry that the applications will not be portable from app engine and fear being locked into the technology    in response  there are a number of projects to create open source back ends for the various proprietary closed apis of app engine  especially the datastore  appscale  capedwarf and typhoonae   are a few of the open source efforts     appscale automatically deploys and scales unmodified google app engine applications over popular public and private cloud systems and on premises clusters    appscale can run python  java  php  and go applications on ec   google compute engine  softlayer  azure and other cloud vendors     typhoonae   can run python app engine applications on any cloud that support linux machines     web py web framework offers migration between sql databases and google app engine  however it doesn t support several app engine specific features such as transactions and namespaces       in google i o       google announced app engine backends  which are allowed to run continuously  and consume more memory         in oct       google previewed a zero maintenance sql database  which supports jdbc and db api    this service allows to create  configure  and use relational databases with app engine applications  the database engine is mysql version        and the database size must be no larger than   gb       google app engine requires a google account to get started  and an account may allow the developer to register up to    applications  this limit can be increased by google staff     google app engine defines usage quotas for free applications  extensions to these quotas can be requested  and application authors can pay for additional resources    below are limit and quotas defined per application     application creators who enable billing pay only for instance hours  bandwidth  storage  and api usage in excess of the free quotas  free quotas were reduced on may             reduced again on june             but then revised in may      to allow for more infrastructure and pricing changes      