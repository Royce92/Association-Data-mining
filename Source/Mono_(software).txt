 mono is a free and open source project led by xamarin  formerly by novell and originally by ximian  to create an ecma standard compliant   net framework compatible set of tools including  among others  a c  compiler and a common language runtime     the stated purpose of mono is not only to be able to run microsoft  net applications cross platform  but also to bring better development tools to linux developers   mono can be run on many software systems including android  most linux distributions  bsd  os x  windows  solaris  and even some game consoles such as playstation    wii  and xbox         the logo of mono is a stylized monkey s face  mono being spanish for monkey               when microsoft first announced their  net framework in june      it was described as  a new platform based on internet standards     and in december of that year the underlying common language infrastructure was published as an open standard   ecma         opening up the potential for independent implementations    miguel de icaza of ximian believed that  net had the potential to increase programmer productivity and began investigating whether a linux version was feasible    recognizing that their small team could not expect to build and support a full product  they launched the mono open source project  on july          at the o reilly conference     after three years  development  mono     was released on june             mono evolved from its initial focus of a developer platform for linux desktop applications to supporting a wide range of architectures and operating systems   including embedded systems       after novell was acquired by attachmate in april       attachmate announced hundreds of layoffs for the novell workforce    putting in question the future of mono         on may     miguel de icaza announced in his blog that mono would continue to be supported by xamarin  a company he founded after being laid off from novell  the original mono team had also moved to the new company  xamarin planned to keep working on mono and had planned to rewrite the commercial  net stacks for ios and android from scratch  because novell still owned monotouch and mono for android at the time    after this announcement  the future of the project was questioned  monotouch and mono for android being in direct competition with the existing commercial offerings now owned by attachmate  and considering that the xamarin team would have difficulties proving that they did not use technologies they formerly developed when they were employed by novell for the same work    however  in july       novell  now a subsidiary of attachmate  and xamarin  announced that it granted a perpetual license to xamarin for mono  monotouch and mono for android  which officially took stewardship of the project         mono s current version is         as of march     update   this version provides the core api of the  net framework and support for visual basic net and c  versions           and      linq to objects  xml  and sql are part of the distribution  c      is now the default mode of operation for the c  compiler  windows forms     is also supported  but not actively developed  and as such its support on mono is incomplete       mono s aim is to achieve full support for the features in  net     except windows presentation foundation  wpf   which the mono team do not plan to support due to the amount of work it would need     windows workflow foundation  wf   limited windows communication foundation  wcf     some missing parts of the  net framework are under development in an experimental mono subproject called olive       the mono project has also created a visual basic  net compiler and a runtime designed for running vb net applications  it is currently being developed by rolf bjarne kvinge     an open source implementation of microsoft silverlight  called moonlight  has been included since mono        moonlight      which supports the silverlight     apis  was released january           moonlight     supports silverlight     and some features of silverlight        a preview release of moonlight     was announced in february      and contains updates to silverlight   support       the moonlight project was abandoned on may             according to miguel  two factors sealed the fate of the project  microsoft added  artificial restrictions  that     xa made it useless for desktop programmingxa       and the technology had not gained enough traction on the web     mono consists of three groups of components     the core components include the c  compiler  the virtual machine for the common language infrastructure and the core class libraries  these components are based on the ecma     and ecma     standards    allowing mono to provide a standards compliant  free and open source cli virtual machine  microsoft issued a statement that covers both standards under their community promise license       the mono linux gnome development stack provide tools for application development while using the existing gnome and free and open source libraries  these include  gtk  for graphical user interface  gui  development  mozilla libraries for working with the gecko rendering engine  unix integration libraries  mono posix   database connectivity libraries  a security stack  and the xml schema language relaxng  gtk  allows mono applications to integrate into the gnome desktop as native applications  the database libraries provide connectivity to the object relational database db o  firebird  microsoft sql server  mssql   mysql  open database connectivity  odbc   oracle  postgresql  sqlite  and many others  the mono project tracks developing database components at its website       the microsoft compatibility stack provides a pathway for porting windows  net applications to gnu linux  this group of components include ado net  asp net  and windows forms  among others  as these components are not covered by ecma standards  some of them remain subject to patent fears and concerns     the major components of mono include     the mono runtime contains a code execution engine that translates ecma cil byte codes into native code and supports a number of processors  arm  mips  in    bit mode only   sparc  powerpc  s     in    bit mode   x    x      and ia    for    bit modes     the code generator is exposed in three modes     starting with mono      it is possible to configure mono to use the llvm as the code generation engine instead of mono s own code generation engine  this is useful for high performance computing loads and other situations where the execution performance is more important than the startup performance     starting with the mono     preview  it is no longer necessary to pick one engine over the other at configuration time  the code generation engine can be selected at startup by using the   llvm or   nollvm command line arguments  and it defaults to the fast mono code generation engine     as of mono      the mono runtime ships with two garbage collectors  a generational collector   and the boehm conservative collector     the default garbage collector prior to mono        the boehm demers weiser conservative garbage collector       has significant limitations compared to commercial garbage collected runtimes like the java virtual machine or the  net framework s runtime  because the garbage collector can exhibit memory leaks on certain classes of applications  it may be unsuitable for long running server applications     as of october     update  a new generational collector called the simple generational gc  sgen gc  became available as part of mono  starting with mono       this is the default  for versions of mono from     to        users can elect to use the sgen garbage collector by passing the   gc sgen switch to the mono runtime at startup    this new garbage collector has many advantages over a traditional conservative scanner  it uses generational garbage collection where new objects are allocated from a nursery  during the garbage collection cycle  all objects that survived are migrated to an older generation memory pool  the idea being that many objects are transient and can quickly be collected and only a handful of objects are long term objects that live for the entire life of the application  to improve performance this collector assigns memory pools to each thread to let threads allocate new memory blocks without having to coordinate with other threads  migration of objects from the nursery to the old generation is done by copying the data from the nursery to the old generation pool and updating any live pointers that point to the data to point to the new location  this can be expensive for large objects  so mono s sgen uses a separate pool of memory for large objects  large object section  and uses a mark and sweep algorithm for those objects     currently sgen treats the stack and registers conservatively and pins any objects that could be referenced by any of these roots  the upcoming version of mono scans the managed stack precisely reducing the number of pinned objects     the class library provides a comprehensive set of facilities for application development  they are primarily written in c   but due to the common language specification they can be used by any  net language  the class library is structured into namespaces  and deployed in shared libraries known as assemblies  speaking of the  net framework is primarily referring to this class library       namespaces are a mechanism for logically grouping similar classes into a hierarchical structure  this prevents naming conflicts  the structure is implemented using dot separated words  where the most common top level namespace is system  such as system io and system net  there are other top level namespaces as well  such as accessibility and windows  a user can define a namespace by placing elements inside a namespace block     assemblies are the physical packaging of the class libraries  these are  dll files  just like  but not to be confused with  win   shared libraries  examples of assemblies are mscorlib dll  system dll  system data dll and accessibility dll  namespaces are often distributed among several assemblies and one assembly can be composed of several files     the common language infrastructure  cli   or more commonly known as the common language runtime  is implemented by the mono executable  the runtime is used to execute compiled  net applications  the common language infrastructure is defined by the ecma standard    to run an application  you must invoke the runtime with the relevant parameters     the common language specification  cls  is specified in chapter   of ecma     and defines the interface to the cli  such as conventions like the underlying types for enum  the mono compiler generates an image that conforms to the cls  this is the common intermediate language  the mono runtime takes this image and runs it  the ecma standard formally defines a library that conforms to the cls as a framework     within a native  net mono application  all code is managed  that is  it is governed by the cli s style of memory management and thread safety  other  net or mono applications can use legacy code  which is referred to as unmanaged  by using the system runtime interopservices libraries to create c  bindings  many libraries which ship with mono use this feature of the cli  such as gtk      mono has innovated in some areas with new extensions to the core c  and cli specifications     in addition  mono is available on a variety of operating systems and architectures       several projects extend mono and allow developers to use it in their development environment  these projects include     cross platform     mac os x     mobile platforms     windows     microsoft has a version of  net     now available only for windows xp  called the shared source cli  rotor   microsoft s shared source license may be insufficient for the needs of the community  it explicitly forbids commercial use      free software foundation s decommissioned portable net project       monodevelop is a free gnome integrated development environment primarily designed for c  and other  net languages such as nemerle  boo  and java  via ikvm net   although it also supports languages such as c  c    python  java  and vala  monodevelop was originally a port of sharpdevelop to gtk   but it has since evolved to meet the needs of mono developers  the ide includes class management  built in help  code completion  stetic  a gui designer   project support  and an integrated debugger     the monodoc browser provides access to api documentation and code samples  the documentation browser uses wiki style content management  allowing developers to edit and improve the documentation     xamarin ios and xamarin android  both developed by xamarin  are implementations of mono for iphone and android based smartphones  unlike mono itself  they are released under a commercial license only       xamarin ios  previously named monotouch  is a proprietary library that allows developers to create c  and  net based applications that run on the iphone  ipod and ipad devices  it is based on the mono framework and developed in conjunction with novell  unlike mono applications  xamarin ios  apps  are compiled down to machine code targeted specifically at the apple iphone and ipad    this is necessary because the ios kernel prevents just in time compilers from executing on the device     the xamarin ios stack is made up of     xamarin studio is used as the primary ide  however additional links to xcode and the ios simulator have been written     from april to early september       the future of monotouch was put in doubt as apple introduced new terms for iphone developers that apparently prohibits them from developing in languages other than c  c   and objective c  and the use of a middle layer between the ios platform and iphone applications  this made the future of monotouch  and other technologies such as unity  uncertain    then  in september       apple rescinded this restriction  stating that they were relaxing the language restrictions that they had put in place earlier that year         xamarin android  formerly known as mono for android   initially developed by novell and continued by xamarin  is a proprietary   implementation of mono for android based smart phones        it was first released on april            mono for android was developed to allow developers to more easily write cross platform applications that will run on all mobile platforms    in an interview with h online  miguel de icaza stated   our vision is to allow developers to reuse their engine and business logic code across all mobile platforms and swapping out the user interface code for a platform specific api        in august       a microsoft spokesman  tom hanrahan of microsoft s open source technology centre  stated  in reference to the lawsuit filed by oracle against google over android s use of java  that  the type of action oracle is taking against google over java is not going to happen  if a  net port to android was through mono it would fall under the microsoft community promise agreement          the xamarin android stack consists of the following components     mono is dual licensed by xamarin  similar to other products such as qt and the mozilla application suite  mono s c  compiler and tools are released under the gnu general public license  gplv  only   starting with version     of mono  the mono c  compiler source code will also be available under the mit x   license     the runtime libraries under the gnu lesser general public license  lgplv  only  and the class libraries under the mit license  these are all free software and open source licenses and hence mono is free and open source software     the license of the c  compiler was changed from the gpl to the mit x   license   to allow the compiler code to be reused in a few instances where the gpl would have prevented such     mono s implementation of those components of the  net stack not submitted to the ecma for standardization has been the source of patent violation concerns for much of the life of the project    in particular  discussion has taken place about whether microsoft could destroy the mono project through patent suits    yet  in june      the ubuntu technical board stated that it saw  no reason to exclude mono or applications based upon it from the archive  or from the default installation set        the base technologies submitted to the ecma  and therefore also the unix gnome specific parts  are claimed to be safe due to microsoft s explicitly placing both ecma     and ecma     standards under the microsoft community promise  the concerns primarily relate to technologies developed by microsoft on top of the  net framework  such as asp net  ado net and windows forms  see non standardized namespaces   i e  parts composing mono s windows compatibility stack  these technologies are todaywhen  not fully implemented in mono and not required for developing mono applications  they are simply there for developers and users who need full compatibility with the windows system     should patent issues ever arise  the mono project s stated strategy for dealing with them is as follows       in addition  mono is also included in the list of software that the open invention network has sworn to protect       on july          microsoft announced that it was placing their ecma     and ecma     specifications under their community promise pledging that they would not assert their patents against anyone implementing  distributing  or using alternative implementations of  net    however  their position regarding the non ecma components like asp net  ado net  and windows forms  which are the bone of contention  remains unclarified     the free software foundation s richard stallman has stated in            that     we should discourage people from writing programs in c   therefore  we should not include c  implementations in the default installation of gnu linux distributions or in their principal ways of installing gnome     in             brett smith  also from the fsf  stated that  microsoft s patents are much more dangerous  it s the only major software company that has declared itself the enemy of gnu linux and stated its intention to attack our community with patents     c  represents a unique threat to us  and  the community promise does nothing to change any of this        fedora project leader  paul frields  has stated  we do have some serious concerns about mono and we ll continue to look at it with our legal counsel to see what if any steps are needed on our part   yet  we haven t come to a legal conclusion that is pat enough for us to make the decision to take mono out        many programs covering a range of applications have been developed using the mono application programming interface  api  and c   some programs written for the linux desktop include banshee  beagle  docky  f spot  gbrainy  gnome do  monotorrent  pinta  and tomboy  a number of video games such as the sims   and second life s scripting language  lsl  although not an official  net language itself   opensimulator virtual world server  games built with the unity game engine also make use of mono  