 java platform  standard edition or java se is a widely used platform for development and deployment of portable applications for desktop and server environments   java se uses the object oriented java programming language  it is part of the java software platform family  java se defines a wide range of general purpose apis   such as java apis for the java class library   and also includes the java language specification and the java virtual machine specification   one of the most well known implementations of java se is oracle corporation s java development kit  jdk       java se was known as java   platform  standard edition or j se from version     until version      the  se  is used to distinguish the base platform from the enterprise edition  java ee  and micro edition  java me  platforms  the     was originally intended to emphasize the major changes introduced in version      but was removed in version      the naming convention has been changed several times over the java version history  starting with j se      merlin   java se has been developed under the java community process  which produces descriptions of proposed and final specifications for the java platform called java specification requests  jsr    jsr    was the umbrella specification for j se     and jsr     specified j se      tiger   java se    mustang  was released under jsr         java platform  enterprise edition  java ee  is a related specification that includes all the classes in java se  plus a number that are more useful to programs that run on servers as opposed to workstations     java platform  micro edition  java me  is a related specification intended to provide a certified collection of java apis for the development of software for small  resource constrained devices such as cell phones  pdas and set top boxes     the java runtime environment  jre  and java development kit  jdk  are the actual files downloaded and installed on a computer to run or develop java programs  respectively     the java package java lang contains fundamental classes and interfaces closely tied to the language and runtime system  this includes the root classes that form the class hierarchy  types tied to the language definition  basic exceptions  math functions  threading  security functions  as well as some information on the underlying native system  this package contains    of    error classes provided in jdk       the main classes and interfaces in java lang are     classes in java lang are automatically imported into every source file     the java lang ref package provides more flexible types of references than are otherwise available  permitting limited interaction between the application and the java virtual machine  jvm  garbage collector  it is an important package  central enough to the language for the language designers to give it a name that starts with  java lang   but it is somewhat special purpose and not used by a lot of developers  this package was added in j se         java has an expressive system of references and allows for special behavior for garbage collection  a normal reference in java is known as a  strong reference   the java lang ref package defines three other types of references   soft  weak  and phantom references  each type of reference is designed for a specific use     each of these reference types extends the reference class  which provides the get   method to return a strong reference to the referent object  or null if the reference has been cleared or if the reference type is phantom   and the clear   method to clear the reference     the java lang ref also defines the class referencequeue  which can be used in each of the applications discussed above to keep track of objects that have changed reference type  when a reference is created it is optionally registered with a reference queue  the application polls the reference queue to get references that have changed reachability state     reflection is a constituent of the java api that lets java code examine and  reflect  on java components at runtime and use the reflected members  classes in the java lang reflect package  along with java lang class and java lang package accommodate applications such as debuggers  interpreters  object inspectors  class browsers  and services such as object serialization and javabeans that need access to either the public members of a target object  based on its runtime class  or the members declared by a given class  this package was added in jdk         reflection is used to instantiate classes and invoke methods using their names  a concept that allows for dynamic programming  classes  interfaces  methods  fields  and constructors can all be discovered and used at runtime  reflection is supported by metadata that the jvm has about the program     there are two basic techniques involved in reflection     discovery typically starts with an object and calling the object getclass   method to get the object s class  the class object has several methods for discovering the contents of the class  for example     the class object can be obtained either through discovery  by using the class literal  e g  myclass class  or by using the name of the class  e g  class forname  mypackage myclass     with a class object  member method  constructor  or field objects can be obtained using the symbolic name of the member  for example     method  constructor  and field objects can be used to dynamically access the represented member of the class  for example     the java lang reflect package also provides an array class that contains static methods for creating and manipulating array objects  and since j se      a proxy class that supports dynamic creation of proxy classes that implement specified interfaces     the implementation of a proxy class is provided by a supplied object that implements the invocationhandler interface  the invocationhandler s   invoke object  method  object  method is called for each method invoked on the proxy object the first parameter is the proxy object  the second parameter is the method object representing the method from the interface implemented by the proxy  and the third parameter is the array of parameters passed to the interface method  the invoke   method returns an object result that contains the result returned to the code that called the proxy interface method     the java io package contains classes that support input and output  the classes in the package are primarily stream oriented  however  a class for random access files is also provided  the central classes in the package are inputstream and outputstream  which are abstract base classes for reading from and writing to byte streams  respectively  the related classes reader and writer are abstract base classes for reading from and writing to character streams  respectively  the package also has a few miscellaneous classes to support interactions with the host file system     the stream classes follow the decorator pattern by extending the base subclass to add features to the stream classes  subclasses of the base stream classes are typically named for one of the following attributes     the stream subclasses are named using the naming pattern xxxstreamtype where xxx is the name describing the feature and streamtype is one of inputstream  outputstream  reader  or writer     the following table shows the sources destinations supported directly by the java io package     other standard library packages provide stream implementations for other destinations  such as the inputstream returned by the java net socket getinputstream   method or the java ee javax servlet servletoutputstream class     data type handling and processing or filtering of stream data is accomplished through stream filters  the filter classes all accept another compatible stream object as a parameter to the constructor and decorate the enclosed stream with additional features  filters are created by extending one of the base filter classes filterinputstream  filteroutputstream  filterreader  or filterwriter     the reader and writer classes are really just byte streams with additional processing performed on the data stream to convert the bytes to characters  they use the default character encoding for the platform  which as of j se     is represented by the charset returned by the java nio charset charset defaultcharset   static method  the inputstreamreader class converts an inputstream to a reader and the outputstreamwriter class converts an outputstream to a writer  both these classes have constructors that support specifying the character encoding to use  if no encoding is specified  the program uses the default encoding for the platform     the following table shows the other processes and filters that the java io package directly supports  all these classes extend the corresponding filter class     the randomaccessfile class supports random access reading and writing of files  the class uses a file pointer that represents a byte offset within the file for the next read or write operation  the file pointer is moved implicitly by reading or writing and explicitly by calling the seek long  or skipbytes int  methods  the current position of the file pointer is returned by the getfilepointer   method     the file class represents a file or directory path in a file system  file objects support the creation  deletion and renaming of files and directories and the manipulation of file attributes such as read only and last modified timestamp  file objects that represent directories can be used to get a list of all the contained files and directories     the filedescriptor class is a file descriptor that represents a source or sink  destination  of bytes  typically this is a file  but can also be a console or network socket  filedescriptor objects are used to create file streams  they are obtained from file streams and java net sockets and datagram sockets     in j se      the package java nio  nio or new i o  was added to support memory mapped i o  facilitating i o operations closer to the underlying hardware with sometimes dramatically better performance  the java nio package provides support for a number of buffer types  the subpackage java nio charset provides support for different character encodings for character data  the subpackage java nio channels provides support for channels  which represent connections to entities that are capable of performing i o operations  such as files and sockets  the java nio channels package also provides support for fine grained locking of files     the java math package supports multiprecision arithmetic  including modular arithmetic operations  and provides multiprecision prime number generators used for cryptographic key generation  the main classes of the package are     the java net package provides special io routines for networks  allowing http requests  as well as other common transactions     the java text package implements parsing routines for strings and supports various human readable languages and locale specific parsing     data structures that aggregate objects are the focus of the java util package  included in the package is the collections api  an organized data structure hierarchy influenced heavily by the design patterns considerations     created to support java applet creation  the java applet package lets applications be downloaded over a network and run within a guarded sandbox  security restrictions are easily imposed on the sandbox  a developer  for example  may apply a digital signature to an applet  thereby labeling it as safe  doing so allows the user to grant the applet permission to perform restricted operations  such as accessing the local hard drive   and removes some or all the sandbox restrictions  digital certificates are issued by certificate authorities     included in the java beans package are various classes for developing and manipulating beans  reusable components defined by the javabeans architecture  the architecture provides mechanisms for manipulating properties of components and firing events when those properties change     the apis in java beans are intended for use by a bean editing tool  in which beans can be combined  customized  and manipulated  one type of bean editor is a gui designer in an integrated development environment     the java awt  or abstract window toolkit  provides access to a basic set of gui widgets based on the underlying native platform s widget set  the core of the gui event subsystem  and the interface between the native windowing system and the java application  it also provides several basic layout managers  a datatransfer package for use with the clipboard and drag and drop  the interface to input devices such as mice and keyboards  as well as access to the system tray on supporting systems  this package  along with javax swing contains the largest number of enums    in all  in jdk       the java rmi package provides java remote method invocation to support remote procedure calls between two java applications running in different jvms     support for security  including the message digest algorithm  is included in the java security package     an implementation of the jdbc api  used to access sql databases  is grouped into the java sql package     the javax rmi package provides the support for the remote communication between applications  using the rmi over iiop protocol  this protocol combines rmi and corba features     java se core technologies   corba   rmi iiop    swing is a collection of routines that build on java awt to provide a platform independent widget toolkit  javax swing uses the  d drawing routines to render the user interface components instead of relying on the underlying native operating system gui support     this package contains the largest number of classes      in all  in jdk    this package  along with java awt also contains the largest number of enums    in all  in jdk    it supports pluggable looks and feels  plafs  so that widgets in the gui can imitate those from the underlying native system  design patterns permeate the system  especially a modification of the model view controller pattern  which loosens the coupling between function and appearance  one inconsistency is that  as of j se      fonts are drawn by the underlying native system  and not by java  limiting text portability  workarounds  such as using bitmap fonts  do exist  in general   layouts  are used and keep elements within an aesthetically consistent gui across platforms     the javax swing text html parser package provides the error tolerant html parser that is used for writing various web browsers and web bots     the javax xml bind annotation package contains the largest number of annotation types     in all  in jdk    it defines annotations for customizing java program elements to xml schema mapping     the org omg corba package provides the support for the remote communication between applications using the general inter orb protocol and supports other features of the common object request broker architecture  same as rmi and rmi iiop  this package is for calling remote methods of objects on other virtual machines  usually via network      this package contains the largest number of exception classes     in all  in jdk    from all communication possibilities corba is portable between various languages  however  with this comes more complexity     the org omg portableinterceptor package contains the largest number of interfaces     in all  in jdk    it provides a mechanism to register orb hooks through which orb services intercept the normal flow of execution of the orb     several critical security vulnerabilities have been reported  the most recent in january         security alerts from oracle announce critical security related patches to java se   