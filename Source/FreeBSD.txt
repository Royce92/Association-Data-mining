 freebsd is a free unix like operating system descended from research unix via the berkeley software distribution  bsd   although for legal reasons freebsd cannot use the unix trademark  it is a direct descendant of bsd  which was historically also called  bsd unix  or  berkeley unix   the first version of freebsd was released in       and today freebsd is the most widely used open source bsd distribution  accounting for more than three quarters of all installed systems running open source bsd derivatives      freebsd has similarities with linux  with two major differences in scope and licensing  freebsd maintains a complete operating system  i e  the project delivers kernel  device drivers  userland utilities and documentation  as opposed to linux delivering a kernel and drivers only and relying on third parties for system software   and freebsd source code is generally released under a permissive bsd license as opposed to the copyleft gpl     the freebsd project includes a security team overseeing all software shipped in the base distribution  a wide range of additional third party applications may be installed via two package managers   pkgng  and the freebsd ports  or by directly compiling source code  due to its permissive licensing terms  much of freebsd s code base has become an integral part of other operating systems such as juniper junos and apple s os x             freebsd s roots go back to the university of california  berkeley  the university acquired a unix source license from at t  students of the university started to modify and improve the at t unix and called this modified version berkeley unix or bsd  implementing features such as tcp ip  virtual memory and the unix file system  the bsd project was founded in      by bill joy  but since bsd contained code from at t unix  all recipients had to get a license from at t first in order to use bsd      in june        networking release    or simply net  xa   the first public version of bsdxa   was released  after releasing net    keith bostic  a developer of bsd  suggested replacing all at t code with freely redistributable code under the original bsd license  work on replacing at t code began and  after    months  much of the at t code was replaced  however  six files containing at t code remained in the kernel  the bsd developers decided to release the  networking release    without those six files  net   was released in           in       several months after the release of net    william jolitz and lynne jolitz  wrote replacements for those six missing files and ported bsd to the intel       based microprocessors and called their new operating system    bsd  they released    bsd via an anonymous ftp server   the development flow of    bsd was slow and after a period of neglect  a group of    bsd users decided to branch out on their own and create freebsd so that they could keep the operating system up to date  the first version of freebsd was released on november            in the early days of the project s inception  a company named walnut creek cdrom  upon the suggestion of the two freebsd developers  agreed to release the operating system on cd rom  in addition to that  the company employed jordan hubbard and david greenman  ran freebsd on its servers  sponsored freebsd conferences and published freebsd related books  including the complete freebsd by greg lehey  by       freebsd was walnut creek s  most successful product   the company itself later renamed to the freebsd mall and later ixsystems        today  freebsd is used by many it companies such as ibm  nokia  juniper networks  and netapp     certain parts of apple s mac os x operating system are based on freebsd    the playstation   operating system also borrows certain components from freebsd    while the playstation   operating system is derived from freebsd            bsd and freebsd were both derived from      s bsd release   in january       bsdi started to release bsd      later called bsd os  an operating system similar to freebsd and based on      s bsd release  at t filed a lawsuit against bsdi and alleged distribution of at t source code in violation of license agreements  the lawsuit was settled out of court and the exact terms were not all disclosed  the only one that became public was that bsdi would migrate their source base to the newer    bsd lite sources  although not involved in the litigation  it was suggested to freebsd that they should also move to    bsd lite    freebsd     which was released on november       was the first version of freebsd without any code from at t       as a general purpose operating system  freebsd could be used in various scenarios       freebsd contains a significant collection of server related software in the base system and the ports collection  it is possible to configure and use freebsd as a mail server  web server  firewall  ftp server  dns server and a router  among other applications     although freebsd does not install the x window system by default  it is available in the freebsd ports collection  a number of desktop environments such as gnome  kde and xfce  and lightweight window managers such as openbox  fluxbox and dwm are also available to freebsd     in addition to widely used x   and x      platforms  freebsd supports a number of less used hardware platforms such as arm  powerpc and mips to a lesser degree     freebsd s tcp ip stack is based on the    bsd implementation of tcp ip which greatly contributed to the widespread adoption of these protocols    freebsd also supports ipv     sctp  ipsec  and wireless networking  wi fi     the ipv  and ipsec stacks were taken from the kame project    also  freebsd supports ipx and appletalk protocols  but they are considered old and it is planned to drop support of them in the upcoming freebsd            as of freebsd      support for the common address redundancy protocol  carp  was imported from the openbsd project  carp allows multiple nodes to share a set of ip addresses  so if one of the nodes goes down  other nodes still can serve the requests       freebsd has several unique features related to storage  soft updates can protect the consistency of the ufs filesystem  widely used on the bsds  in the event of a system crash    filesystem snapshots allow an image of a ufs filesystem at an instant in time to be efficiently created    snapshots allow reliable backup of a live filesystem  geom is a modular framework that provides raid  levels         currently   full disk encryption  journaling  concatenation  caching  and access to network backed storage  geom allows building of complex storage solutions combining   chaining   these mechanisms    freebsd provides two framework for data encryption  gbde and geli  both gbde and geli operate at the disk level  gbde was written by poul henning kamp and is distributed under the two clause bsd license  geli is an alternative to gbde that was written by pawel jakub dawidek and first appeared in freebsd             from     onward  freebsd supports the zfs filesystem  zfs was previously an open source filesystem that was first developed by sun microsystems  but when oracle acquired sun  zfs became a proprietary product  however  the freebsd project is still developing and improving its zfs implemention via the openzfs project       freebsd provides several security related features including access control lists  acls     security event auditing  extended file system attributes  mandatory access controls  mac    and fine grained capabilities    these security enhancements were developed by the trustedbsd project  the project was founded by robert watson with the goal of implementing concepts from the common criteria for information technology security evaluation and the orange book  this project is ongoing and many of its extensions have been integrated into freebsd    the project is supported by a variety of organizations  including the darpa  nsa  network associates laboratories  safeport network services  the university of pennsylvania  yahoo   mcafee research  sparta  apple computer  ncircle network security  google  the university of cambridge computer laboratory  and others       the project has also ported the nsa s flask te implementation from selinux to freebsd  other work includes the development of openbsm  an open source implementation of sun s basic security module  bsm  api and audit log file format  which supports an extensive security audit system  this was shipped as part of freebsd      other infrastructure work in freebsd performed as part of the trustedbsd project has included geom and openpam       while most components of the trustedbsd project are eventually folded into the main sources for freebsd  many features  once fully matured  find their way into other operating systems  for example  openpam have been adopted by netbsd    moreover  the trustedbsd mac framework has been adopted by apple for os x       freebsd ships with three different firewall packages  ipfw  pf and ipfilter  ipfw is freebsd s native firewall  pf was taken from openbsd and ipfilter was ported to freebsd by darren reed       taken from openbsd  the openssh program was included in default install  openssh is a free implementation of ssh protocol and is a replacement for telnet  unlike telnet  openssh encrypts all information  including username and password        freebsd has been ported to a variety of processor architectures  the freebsd project organizes architectures into tiers that characterize the level of support provided  tier   architectures are mature and fully supported  tier   architectures are undergoing major development  tier   architectures are experimental or are no longer under active development and tier   architectures have no support at all     as of march       freebsd has been ported to the following architectures       the arm and mips support is mostly aimed at embedded systems  however freebsd arm runs on a number of single board computers  including the beaglebone black  raspberry pi     and wandboard       freebsd has a repository of over        applications that are developed by third parties outside of the project itself   examples include windowing systems  internet browsers  email programs  office suites  and so forth   in general  the project itself does not develop this software  only the framework to allow these programs to be installed  termed the ports collection   applications may be installed either from source  if its licensing terms allow such redistribution  these are called ports   or as compiled binaries if allowed  these are called packages   the ports collection supports the latest release on the  current and  stable branches  older releases are not supported and may or may not work correctly with an up to date ports collection       each application in the ports collection is installed from source  ports are instructions for compiling software on freebsd  and packages are pre compiled ports    each port s makefile automatically fetches the application source code  either from a local disk  cd rom or via ftp  unpacks it on the system  applies the patches  and compiles     this method can be very time consuming as compiling large packages can take hours  but the user is able to install a customized program  for most ports  precompiled binary packages also exist  this method is very quick as the whole compilation process is avoided  but the user is not able to install a program with customized compile time options       in freebsd       a new package manager  called pkg  was introduced  pkg is a replacement for the previously used package tools    it has functionality similar to apt and yum  it includes installation and upgrades from both source  ports  and with pre built binary packages     packagekit also supports the freebsd ports collection as an accepted repository     first introduced in   x  a freebsd jail is a security mechanism and an implementation of operating system level virtualization that enables the user to run multiple instances of a guest operating system  freebsd  on top of a freebsd host  jails are enhanced version of traditional chroot mechanism  a process that runs in a jail  is unable to access the resources outside of that jail  every jail has its own hostname and ip address  it is possible to run multiple jails at the same time  the kernel is shared among all of them  therefore only software supported by the freebsd kernel can be run inside a jail       bhyve  a new virtualization solution was introduced in freebsd       bhyve allows a user to run a number of guest operating systems  freebsd  openbsd and linux  simultaneously  other operating systems such as microsoft windows and illumos are planned  bhyve was written by neel nato and peter grehan and was announced in the      bsdcan conference for the first time  the main difference between bhyve and freebsd jails is that jails are an operating system level virtualization and therefore limited to only freebsd guests  but bhyve is a type   hypervisor and is not limited to only freebsd guests        for comparison  bhyve is a similar technology to kvm whereas jails are closer to lxc containers or zones     most software that runs on linux can run on freebsd using an optional built in compatibility layer  hence  most linux binaries can be run on freebsd  including some proprietary applications distributed only in binary form  this compatibility layer is not an emulation  linux s system call interface is implemented in the freebsd s kernel and hence  linux executable images and shared libraries are treated the same as freebsd s native executable images and shared libraries    additionally  freebsd provides compatibility layers for several other unix like operating systems  in addition to linux  such as bsd os and svr     however  it is more common for users to compile those programs directly on freebsd    no noticeable performance penalty over native freebsd programs has been noted when running linux binaries  and  in some cases  these may even perform more smoothly than on linux      however  the layer is not altogether seamless  and some linux binaries are unusable or only partially usable on freebsd  there is support for system calls up to version         available since freebsd      however  there is currently no support for running    bit linux binaries    as of september       there are plans for supporting    bit linux binaries       freebsd has implemented a number of microsoft windows native ndis kernel interfaces to allow freebsd to run windows only network drivers         freebsd s kernel provides support for some essential tasks such as managing processes  communication  booting and filesystems  freebsd has a monolithic kernel    with modular design  different parts of the kernel such as drivers  are designed as modules  the user can load and unload these modules at any time    ule is the default scheduler in freebsd since version      it supports smp and smt    the freebsd kernel has also a scalable event notification interface  named kqueue  it has been ported to other bsd derivatives such as openbsd  netbsd    kernel threading was introduced in freebsd      using an m n threading model  this model works well in theory      but it is hard to implement and few operating systems support it  although freebsd s implementation of this model worked  it did not perform well  so from version     onward  freebsd started using a     threading model  called libthr       freebsd s documentation consists of its handbooks  manual pages  mailing list archives  faqs and a variety of articles  mainly maintained by the freebsd documentation project  freebsd s documentation is translated into several languages    all official documentation is released under the freebsd documentation license   a permissive non copyleft free documentation license that is compatible with the gnu fdl     freebsd s documentation is described as  high quality          the freebsd project maintains a variety of mailing lists    among the most popular mailing lists are freebsd questions  general questions  and freebsd hackers  a place for asking more technical questions        from version     to      freebsd used the sysinstall program as its main installer  it was written in c by jordan hubbard  it uses a text user interface  and is divided into a number of menus and screens that can be used to configure and control the installation process  it can also be used to install ports and packages as an alternative to the command line interface       the sysinstall utility is now considered deprecated in favor of bsdinstall  a new installer which was introduced in freebsd      bsdinstall is  a lightweight replacement for sysinstall  that was written in sh  according to osnews   it has lost some features while gaining others  but it is a much more flexible design  and will ultimately be significant improvement          freebsd is developed by a volunteer team located around the world  the developers use the internet for all communication and many have not met each other in person  in addition to local user groups sponsored and attended by users  an annual conference  called bsdcon  is held by usenix  bsdcon is not freebsd specific so it deals with the technical aspects of all bsd operating systems  including openbsd and netbsd    in addition to bsdcon  three other annual conferences  eurobsdcon  asiabsdcon and bsdcan take place in europe  japan and canada respectively           the freebsd project is run by around     committers  or developers who have commit access to the master source code repositories and can develop  debug or enhance any part of the system  most of the developers are volunteers and few developers are paid by some companies   there are several kinds of committers  including source committers  base operating system   doc committers  documentation and web site authors  and ports  third party application porting and infrastructure   every two years the freebsd committers select a   member freebsd core team who are responsible for overall project direction  setting and enforcing project rules and approving new commiters  or the granting of svn commit access  a number of responsibilities are officially assigned to other development teams by the freebsd core team  for example  responsibility for managing the ports collection is delegated to the ports management team       in addition to developers  freebsd has thousands of  contributors   contributors are also volunteers outside of the freebsd project who submit patches for consideration by committers  as they don t have direct access to freebsd s source code repository  committers then evaluate contributors submissions and decide what to accept and what to reject  a contributor who submits high quality patches is often asked to become a committer       freebsd developers maintain at least two branches of simultaneous development  the  current branch always represents the  bleeding edge  of freebsd development  a  stable branch of freebsd is created for each major version number  from which  release are cut about once every     months  if a feature is sufficiently stable and mature it will likely be backported  mfc or merge from current in freebsd developer slang  to the  stable branch         last week  i donated one million dollars to the freebsd foundation  which supports the open source operating system that has helped millions of programmers pursue their passions and bring their ideas to life  i m actually one of those people  i started using freebsd in the late   s  when i didn t have much money and was living in government housing  in a way  freebsd helped lift me out of poverty   one of the main reasons i got a job at yahoo  is because they were using freebsd  and it was my operating system of choice  years later  when brian and i set out to build whatsapp  we used freebsd to keep our servers running  we still do  i m announcing this donation to shine a light on the good work being done by the freebsd foundation  with the hope that others will also help move this project forward  we ll all benefit if freebsd can continue to give people the same opportunity it gave me   if it can lift more immigrant kids out of poverty  and help more startups build something successful  and even transformative      freebsd development is supported in part by the freebsd foundation  the foundation is a non profit organization that accepts donations to fund freebsd development  such funding has been used to sponsor developers for specific activities  purchase hardware and network infrastructure  provide travel grants to developer summits  and provide legal support to the freebsd project       on november       the freebsd foundation received   million usd donation from jan koum co founder and ceo of whatsapp  that makes it the largest single donation to the foundation since its inception  jan koum himself is a freebsd user since late     s and running freebsd as whatsapp server       freebsd is released under a variety of open source licenses  the kernel code and most newly created code is released under the two clause bsd license which allows everyone to use and redistribute freebsd as they wish  this license was approved by free software foundation   and open source initiative   as a free software and open source license respectively  free software foundation described this license as  a lax  permissive non copyleft free software license  compatible with the gnu gpl   there are parts released under three  and four clause bsd licenses  as well as beerware license  some device drivers include a binary blob    such as the atheros hal of freebsd versions before        some of the code contributed by other projects is licensed under gpl  lgpl  cddl   and isc  all the code licensed under gpl and cddl is clearly separated from the code under liberal licenses  to make it easy for users such as embedded device manufacturers to use only permissive free software licenses  clangbsd aims to replace some gpl dependencies in the freebsd base system by replacing the gnu compiler collection with the bsd licenced llvm clang compiler  clangbsd became self hosting on    april            for many years freebsd s logo was the generic bsd daemon  also called beastie  a distorted pronunciation of bsd  first appearing in      on unix t shirts purchased by bell labs  the more popular versions of the bsd daemon were drawn by animation director john lasseter beginning in           several freebsd specific versions were later drawn by tatsumi hosokawa    however  beastie was not unique to freebsd  in lithographic terms  the lasseter graphic is not line art and often requires a screened  four color photo offset printing process for faithful reproduction on physical surfaces such as paper  also  the bsd daemon was thought to be too graphically detailed for smooth size scaling and aesthetically over dependent upon multiple color gradations  making it hard to reliably reproduce as a simple  standardized logo in only two or three colors  much less in monochrome  because of these worries  a competition was held and a new logo designed by anton k  gural  still echoing the bsd daemon  was released on   october             however  it was announced by robert watson that  the freebsd project is  seeking a new logo  but not a new mascot  and that the freebsd project will continue to use beastie as its mascot       the name  freebsd  was coined by david greenman on    june       other suggested names were  bsdfree    and  free  bsd     freebsd s slogan   the power to serve   is a registered trademark of the freebsd foundation       there are a number of software distributions based on freebsd including     all these distributions have no or only minor changes when compared with the original freebsd base system  the main difference to the original freebsd is that they come with pre installed and pre configured software for specific use cases  this can be compared with linux distributions  which are all binary compatible because they use the same kernel and also use the same basic tools  compilers and libraries  while coming with different applications  configurations and branding     besides these distributions  there are some independent operating systems based on freebsd  dragonfly bsd is a fork from freebsd     aiming for a different multiprocessor synchronization strategy than the one chosen for freebsd   and development of some microkernel features    it does not aim to stay compatible with freebsd and has huge differences in the kernel and basic userland  midnightbsd is a fork of freebsd     borrowing heavily from nextstep  particularly in the user interface department     darwin  the core of apple os x  includes a virtual file system and network stack derived from the freebsd virtual file system and network stack  and components of its userspace are also freebsd derived         some subscription services that are directly based on freebsd are     embedded devices and embedded device operating systems based on freebsd include     on november       the freebsd security team announced that hackers gained unauthorized access on two of the project s servers  these servers were turned off immediately  more research demonstrated that the first unauthorized access by hackers occurred on    september  apparently hackers gained access to these servers by stealing ssh keys from freebsd s developers  not by exploiting a bug in the operating system itself  these two hacked servers were part of the infrastructure used to build third party software packages  the freebsd security team checked the integrity of the binary packages and announced that no unauthorized change was made to the binary packages  but they stated that they can t guarantee the integrity of packages that were downloaded between    september and    november               