 the domain name system  dns  is a hierarchical distributed naming system for computers  services  or any resource connected to the internet or a private network  it associates various information with domain names assigned to each of the participating entities  most prominently  it translates domain names  which can be easily memorized by humans  to the numerical ip addresses needed for the purpose of computer services and devices worldwide  the domain name system is an essential component of the functionality of most internet services because it is the internet s primary directory service     the domain name system distributes the responsibility of assigning domain names and mapping those names to ip addresses by designating authoritative name servers for each domain  authoritative name servers are assigned to be responsible for their supported domains  and may delegate authority over sub domains to other name servers  this mechanism provides distributed and fault tolerant service and was designed to avoid the need for a single central database     the domain name system also specifies the technical functionality of the database service which is at its core  it defines the dns protocol  a detailed specification of the data structures and data communication exchanges used in dns  as part of the internet protocol suite  historically  other directory services preceding dns were not scalable to large or global directories as they were originally based on text files  prominently the hosts txt resolver  dns has been in wide use since the     s     the internet maintains two principal namespaces  the domain name hierarchy  and the internet protocol  ip  address spaces   the domain name system maintains the domain name hierarchy and provides translation services between it and the address spaces  internet name servers and a communication protocol implement the domain name system   a dns name server is a server that stores the dns records for a domain name  a dns name server responds with answers to queries against its database     the most common types of records stored in the dns database are those dealing with a dns zone s authority authority  soa   ip addresses  a and aaaa   smtp mail exchangers  mx   name servers  ns   pointers for reverse dns lookups  ptr   and domain name aliases  cname   although not intended to be a general purpose database  dns can store records for other types of data for either automatic machine lookups for things like dnssec records  or for human queries like responsible person  rp  records  for a complete list of dns record types  see the list of dns record types  as a general purpose database  dns has also seen use in combating unsolicited email  spam  by using a real time blackhole list stored in a dns database  whether for internet naming or for general purpose uses  the dns database is traditionally stored in a structured zone file             an often used analogy to explain the domain name system is that it serves as the phone book for the internet by translating human friendly computer hostnames into ip addresses  for example  the domain name www example com translates to the addresses                 ipv   and                d   bf           aa   ipv    unlike a phone book  the dns can be quickly updated  allowing a service s location on the network to change without affecting the end users  who continue to use the same host name  users take advantage of this when they use meaningful uniform resource locators  urls   and e mail addresses without having to know how the computer actually locates the services     using a simpler  more memorable name in place of a host s numerical address dates back to the arpanet era  the stanford research institute  now sri international  maintained a text file named hosts txt that mapped host names to the numerical addresses of computers on the arpanet  host operators obtained copies of the master file    the rapid growth of the emerging network required an automated system for maintaining the host names and addresses     paul mockapetris designed the domain name system at the university of california  irvine in       and wrote the first implementation at the request of jon postel from isi  the internet engineering task force published the original specifications in rfc     and rfc     in november       which have remained the standard for naming internet hosts citation needed    in       four uc berkeley students douglas terry  mark painter  david riggle  and songnian zhou wrote the first unix name server implementation  called the berkeley internet name domain  bind  server   in       kevin dunlap of dec substantially revised the dns implementation  mike karels  phil almquist  and paul vixie have maintained bind since then   bind was ported to the windows nt platform in the early     s  bind was widely distributed  especially on unix systems  and is still the most widely used dns software on the internet      in november       rfc       and rfc       superseded the      dns specifications  several additional request for comments have proposed extensions to the core dns protocols citation needed    the domain name space consists of a tree of domain names  each node or leaf in the tree has zero or more resource records  which hold information associated with the domain name  the tree sub divides into zones beginning at the root zone  a dns zone may consist of only one domain  or may consist of many domains and sub domains  depending on the administrative authority delegated to the manager     administrative responsibility over any zone may be divided by creating additional zones  authority is said to be delegated for a portion of the old space  usually in the form of sub domains  to another name server and administrative entity  the old zone ceases to be authoritative for the new zone     the definitive descriptions of the rules for forming domain names appear in rfc       rfc       and rfc       a domain name consists of one or more parts  technically called labels  that are conventionally concatenated  and delimited by dots  such as example com     the limited set of ascii characters permitted in the dns prevented the representation of names and words of many languages in their native alphabets or scripts  to make this possible  icann approved the internationalizing domain names in applications  idna  system  by which user applications  such as web browsers  map unicode strings into the valid dns character set using punycode  in      icann approved the installation of internationalized domain name country code top level domains  in addition  many registries of the existing top level domain names  tld s have adopted the idna system     the domain name system is maintained by a distributed database system  which uses the client server model  the nodes of this database are the name servers  each domain has at least one authoritative dns server that publishes information about that domain and the name servers of any domains subordinate to it  the top of the hierarchy is served by the root name servers  the servers to query when looking up  resolving  a tld     an authoritative name server is a name server that gives answers that have been configured by an original source  for example  the domain administrator or by dynamic dns methods  in contrast to answers that were obtained via a regular dns query to another name server  an authoritative only name server only returns answers to queries about domain names that have been specifically configured by the administrator     in other words  an authoritative name server lets recursive name servers know what dns data  the ipv  ip  the ipv  ip  a list of incoming mail servers  etc   a given host name  such as  www example com   has  as just one example  the authoritative name server for  example com  tells recursive name servers that  www example com  has the ipv  ip address                 an authoritative name server can either be a master server or a slave server  a master server is a server that stores the original  master  copies of all zone records  a slave server uses an automatic updating mechanism of the dns protocol in communication with its master to maintain an identical copy of the master records     a set of authoritative name servers has to be assigned for every dns zone  an ns record about addresses of that set must be stored in the parent zone and servers themselves  as self reference      when domain names are registered with a domain name registrar  their installation at the domain registry of a top level domain requires the assignment of a primary name server and at least one secondary name server  the requirement of multiple name servers aims to make the domain still functional even if one name server becomes inaccessible or inoperable    the designation of a primary name server is solely determined by the priority given to the domain name registrar  for this purpose  generally only the fully qualified domain name of the name server is required  unless the servers are contained in the registered domain  in which case the corresponding ip address is needed as well     primary name servers are often master name servers  while secondary name servers may be implemented as slave servers     an authoritative server indicates its status of supplying definitive answers  deemed authoritative  by setting a software flag  a protocol structure bit   called the authoritative answer  aa  bit in its responses   this flag is usually reproduced prominently in the output of dns administration query tools  such as dig  to indicate that the responding name server is an authority for the domain name in question      domain name resolvers determine the domain name servers responsible for the domain name in question by a sequence of queries starting with the right most  top level  domain label     the process entails     the diagram illustrates this process for the host www wikipedia org     the mechanism in this simple form would place a large operating burden on the root servers  with every search for an address starting by querying one of them  being as critical as they are to the overall function of the system  such heavy use would create an insurmountable bottleneck for trillions of queries placed every day  in practice caching is used in dns servers to overcome this problem  and as a result  root name servers actually are involved with very little of the total traffic     in theory  authoritative name servers are sufficient for the operation of the internet  however  with only authoritative name servers operating  every dns query must start with recursive queries at the root zone of the domain name system and each user system would have to implement resolver software capable of recursive operation     to improve efficiency  reduce dns traffic across the internet  and increase performance in end user applications  the domain name system supports dns cache servers which store dns query results for a period of time determined in the configuration  time to live  of the domain name record in question  typically  such caching dns servers  also called dns caches  also implement the recursive algorithm necessary to resolve a given name starting with the dns root through to the authoritative name servers of the queried domain  with this function implemented in the name server  user applications gain efficiency in design and operation     as one example  if a client wants to know the address for  www example com   it will send  to a recursive caching name server  a dns request stating  i would like the ipv  address for  www example com    the recursive name server will then query authoritative name servers until it gets an answer to that query  or return an error if it s not possible to get an answer   in this case                 the combination of dns caching and recursive functions in a name server is not mandatory  the functions can be implemented independently in servers for special purposes     internet service providers typically provide recursive and caching name servers for their customers  in addition  many home networking routers implement dns caches and recursors to improve efficiency in the local network     the client side of the dns is called a dns resolver  it is responsible for initiating and sequencing the queries that ultimately lead to a full resolution  translation  of the resource sought  e g   translation of a domain name into an ip address     a dns query may be either a non recursive query or a recursive query     the resolver  or another dns server acting recursively on behalf of the resolver  negotiates use of recursive service using bits in the query headers     resolving usually entails iterating through several name servers to find the needed information  however  some resolvers function more simply by communicating only with a single name server  these simple resolvers  called  stub resolvers   rely on a recursive name server to perform the work of finding them     name servers in delegations are identified by name  rather than by ip address  this means that a resolving name server must issue another dns request to find out the ip address of the server to which it has been referred  if the name given in the delegation is a subdomain of the domain for which the delegation is being provided  there is a circular dependency  in this case the name server providing the delegation must also provide one or more ip addresses for the authoritative name server mentioned in the delegation  this information is called glue  the delegating name server provides this glue in the form of records in the additional section of the dns response  and provides the delegation in the authority section of the response     for example  if the authoritative name server for example org is ns  example org  a computer trying to resolve www example org first resolves ns  example org  since ns  is contained in example org  this requires resolving example org first  which presents a circular dependency  to break the dependency  the name server for the top level domain org includes glue along with the delegation for example org  the glue records are address records that provide ip addresses for ns  example org  the resolver uses one or more of these ip addresses to query one of the domain s authoritative servers  which allows it to complete the dns query     the dns resolution process reduces the load on individual servers by caching dns request records for a period of time after a response  this entails the local recording and subsequent consultation of the copy instead of initiating a new request upstream  the time for which a resolver caches a dns response is determined by a value called the time to live  ttl  associated with every record  the ttl is set by the administrator of the dns server handing out the authoritative response  the period of validity may vary from just seconds to days or even weeks     as a noteworthy consequence of this distributed and caching architecture  changes to dns records do not propagate throughout the network immediately  but require all caches to expire and refresh after the ttl  rfc      conveys basic rules for determining appropriate ttl values     some resolvers may override ttl values  as the protocol supports caching for up to    years or no caching at all  negative caching  i e  the caching of the fact of non existence of a record  is determined by name servers authoritative for a zone which must include the start of authority  soa  record when reporting no data of the requested type exists  the value of the minimum field of the soa record and the ttl of the soa itself is used to establish the ttl for the negative answer     a reverse lookup is a query of the dns for domain names when the ip address is known  multiple domain names may be associated with an ip address  the dns stores ip addresses in the form of domain names as specially formatted names in pointer  ptr  records within the infrastructure top level domain arpa  for ipv   the domain is in addr arpa  for ipv   the reverse lookup domain is ip  arpa  the ip address is represented as a name in reverse ordered octet representation for ipv   and reverse ordered nibble representation for ipv      when performing a reverse lookup  the dns client converts the address into these formats before querying the name for a ptr record following the delegation chain as for any dns query  for example  assuming the ipv  address              is assigned to wikimedia  it is represented as a dns name in reverse order               in addr arpa  when the dns resolver gets a pointer  ptr  request  it begins by querying the root servers  which point to the servers of american registry for internet numbers  arin  for the     in addr arpa zone  arin s servers delegate            in addr arpa to wikimedia to which the resolver sends another query for              in addr arpa  which results in an authoritative response     users generally do not communicate directly with a dns resolver  instead dns resolution takes place transparently in applications such as web browsers  e mail clients  and other internet applications  when an application makes a request that requires a domain name lookup  such programs send a resolution request to the dns resolver in the local operating system  which in turn handles the communications required     the dns resolver will almost invariably have a cache  see above  containing recent lookups  if the cache can provide the answer to the request  the resolver will return the value in the cache to the program that made the request  if the cache does not contain the answer  the resolver will send the request to one or more designated dns servers  in the case of most home users  the internet service provider to which the machine connects will usually supply this dns server  such a user will either have configured that server s address manually or allowed dhcp to set it  however  where systems administrators have configured systems to use their own dns servers  their dns resolvers point to separately maintained name servers of the organization  in any event  the name server thus queried will follow the process outlined above  until it either successfully finds a result or does not  it then returns its results to the dns resolver  assuming it has found a result  the resolver duly caches that result for future use  and hands the result back to the software which initiated the request     some large isps have configured their dns servers to violate rules  such as by disobeying ttls  or by indicating that a domain name does not exist just because one of its name servers does not respond       some applications  such as web browsers  maintain an internal dns cache to avoid repeated lookups via the network  this practice can add extra difficulty when debugging dns issues  as it obscures the history of such data  these caches typically use very short caching times on the order of one minute       internet explorer represents a notable exception  versions up to ie   x cache dns records for    hours by default  internet explorer   x and later versions  up to ie    decrease the default time out value to half an hour  which may be changed in corresponding registry keys       the domain name system includes several other functions     there are two types of dns messages  queries and replies  and they both have the same format  each message consists of a header and four sections  question  answer  authority  and additional  the header field  flags  controls the content of these four sections but the structure of all dns messages are the same      the header section contains the fields  identification  flags  number of questions  number of answers  number of authority resource records  rrs   and number of additional rrs  the identification field consists of    bits which identifies the query  the dns client can match a reply with a query using this field  the flag field consists of four bits  the first bit indicates if the message is a query     or a reply      the second bit is set  only in reply messages  if a dns server is authoritative for the queried hostname  the third bit is set to     when the client wants to send a recursive query  the fourth bit is set     in a reply if the replying dns server supports recursion  since not all dns servers are configured to do this task  the question section has a name field which is the hostname that is being queried for and a type field that indicates the type  a  aaaa  mx  etc   that you want to resolve  the answer section has the resource records of the queried name  there can be multiple records if the hostname has multiple ip addresses associated with it       dns primarily uses user datagram protocol  udp  on port number    to serve requests   dns queries consist of a single udp request from the client followed by a single udp reply from the server  the transmission control protocol  tcp  is used when the response data size exceeds     bytes  or for tasks such as zone transfers  some resolver implementations use tcp for all queries         a resource record  rr  is the basic data element in the domain name system  each record has a type  a  mx  etc    an expiration time limit  a class  and some type specific data  resource records of the same type define a resource record set  rrset   the order of resource records in a set  returned by a resolver to an application  is undefined  but often servers implement round robin ordering to achieve global server load balancing  dnssec  however  works on complete resource record sets in a canonical order     when sent over an ip network  all records use the common format specified in rfc            name is the fully qualified domain name of the node in the tree  on the wire  the name may be shortened using label compression where ends of domain names mentioned earlier in the packet can be substituted for the end of the current domain name  a free standing   is used to denote the current origin     type is the record type  it indicates the format of the data and it gives a hint of its intended use  for example  the a record is used to translate from a domain name to an ipv  address  the ns record lists which name servers can answer lookups on a dns zone  and the mx record specifies the mail server used to handle mail for a domain specified in an e mail address     rdata is data of type specific relevance  such as the ip address for address records  or the priority and hostname for mx records  well known record types may use label compression in the rdata field  but  unknown  record types must not  rfc           the class of a record is set to in  for internet  for common dns records involving internet hostnames  servers  or ip addresses  in addition  the classes chaos  ch  and hesiod  hs  exist    each class is an independent name space with potentially different delegations of dns zones     in addition to resource records defined in a zone file  the domain name system also defines several request types that are used only in communication with other dns nodes  on the wire   such as when performing zone transfers  axfr ixfr  or for edns  opt      the domain name system supports wildcard dns records which specify names that start with the asterisk label       e g     example     dns records belonging to wildcard domain names specify rules for generating resource records within a single dns zone by substituting whole labels with matching components of the query name  including any specified descendants  for example  in the dns zone x example  the following configuration specifies that all subdomains  including subdomains of subdomains  of x example use the mail exchanger a x example  the records for a x example are needed to specify the mail exchanger  as this has the result of excluding this domain name and its subdomains from the wildcard matches  all subdomains of a x example must be defined in a separate wildcard statement     the role of wildcard records was refined in rfc       because the original definition in rfc      was incomplete and resulted in misinterpretations by implementers       the original dns protocol had limited provisions for extension with new features  in       paul vixie published in rfc      an extension mechanism  called extension mechanisms for dns  edns  that introduced optional protocol elements without increasing overhead when not in use  this was accomplished through the opt pseudo resource record that only exists in wire transmissions of the protocol  but not in any zone files  initial extensions were also suggested  edns    such as increasing the dns message size in udp datagrams     dynamic dns updates use the update dns opcode to add or remove resource records dynamically from a zone data base maintained on an authoritative dns server  the feature is described in rfc       this facility is useful to register network clients into the dns when they boot or become otherwise available on the network  since a booting client may be assigned a different ip address each time from a dhcp server  it is not possible to provide static dns assignments for such clients     originally  security concerns were not major design considerations for dns software or any software for deployment on the early internet  as the network was not open for participation by the general public  however  the expansion of the internet into the commercial sector in the     s changed the requirements for security measures to protect data integrity and user authentication     several vulnerability issues were discovered and exploited by malicious users  one such issue is dns cache poisoning  in which data is distributed to caching resolvers under the pretense of being an authoritative origin server  thereby polluting the data store with potentially false information and long expiration times  time to live   subsequently  legitimate application requests may be redirected to network hosts operated with malicious intent     dns responses are traditionally not cryptographically signed  leading to many attack possibilities  the domain name system security extensions  dnssec  modify dns to add support for cryptographically signed responses  dnscurve has been proposed as an alternative to dnssec  other extensions  such as tsig  add support for cryptographic authentication between trusted peers and are commonly used to authorize zone transfer or dynamic update operations     some domain names may be used to achieve spoofing effects  for example  paypal com and paypa  com are different names  yet users may be unable to distinguish them in a graphical user interface depending on the user s chosen typeface  in many fonts the letter l and the numeral   look very similar or even identical  this problem is acute in systems that support internationalized domain names  since many character codes in iso        may appear identical on typical computer screens  this vulnerability is occasionally exploited in phishing       techniques such as forward confirmed reverse dns can also be used to help validate dns results     the right to use a domain name is delegated by domain name registrars which are accredited by the internet corporation for assigned names and numbers  icann  or other organizations such as opennic  that are charged with overseeing the name and number systems of the internet  in addition to icann  each top level domain  tld  is maintained and serviced technically by an administrative organization  operating a registry  a registry is responsible for maintaining the database of names registered within the tld it administers  the registry receives registration information from each domain name registrar authorized to assign names in the corresponding tld and publishes the information using a special service  the whois protocol     icann publishes the complete list of tld registries and domain name registrars  registrant information associated with domain names is maintained in an online database accessible with the whois service  for most of the more than     country code top level domains  cctlds   the domain registries maintain the whois  registrant  name servers  expiration dates  etc   information  for instance  denic  germany nic  holds the de domain data  since about       most gtld  generic top level domain  registries have adopted this so called thick registry approach  i e  keeping the whois data in central registries instead of registrar databases     for com and net domain names  a thin registry model is used  the domain registry  e g   verisign  holds basic whois data  i e   registrar and name servers  etc   one can find the detailed whois  registrant  name servers  expiry dates  etc   at the registrars     some domain name registries  often called network information centers  nic   also function as registrars to end users  the major generic top level domain registries  such as for the domains com  net  org  info  use a registry registrar model consisting of many domain name registrars      in this method of management  the registry only manages the domain name database and the relationship with the registrars  the registrants  users of a domain name  are customers of the registrar  in some cases through additional layers of resellers     the domain name system is defined by request for comments  rfc  documents published by the internet engineering task force  internet standards   the following is a list of rfcs that define the dns protocol  