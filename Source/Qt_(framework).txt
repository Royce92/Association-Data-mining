 qt    kju t   cute   or unofficially as q t cue tee     is a cross platform application framework that is widely used for developing application software that can be run on various software and hardware platforms with little or no change in the underlying codebase  while having the power and speed of native applications  qt is currently being developed both by the qt company  a subsidiary of digia  and the qt project under open source governance  involving individual developers and firms working to advance qt        digia owns the qt trademark and copyright  qt is available with both commercial  and open source   gpl v   lgpl v   and lgpl v  licenses             qt is used mainly for developing application software with graphical user interfaces  guis   however  programs without a gui can be developed  such as command line tools and consoles for servers  an example of a non gui program using qt is the cutelyst web framework    gui programs created with qt can have a native looking interface  in which cases qt is classified as a widget toolkit     qt uses standard c   with extensions including signals and slots that simplifies handling of events  and this helps in development of both gui and server applications which receive their own set of event information and should process them accordingly  qt supports many compilers  including the gcc c   compiler and the visual studio suite  qt also provides qt quick  that includes a declarative scripting language called qml that allows using javascript to provide the logic  with qt quick  rapid application development for mobile devices became possible  although logic can be written with native code as well to achieve the best possible performance  qt can be used in several other programming languages via language bindings  it runs on the major desktop platforms and some of the mobile platforms  it has extensive internationalization support  non gui features include sql database access  xml parsing  json parsing  thread management and network support     qt  when it was first released  relied on a few key concepts     qt works on several different platforms  which makes it attractive for those who want a single code base to work virtually everywhere in write once  compile anywhere fashion  qt io website  the new home for qt developers  introduces qt as     framework     platforms      satisfaction           users     the following platforms are officially supported by digia     after nokia opened the qt source code to the community on gitorious various ports appeared  there are also some ports of qt that may be available  but are not supported anymore  these platforms are listed in list of platforms supported by qt     there are four editions of qt available  community  indie mobile  professional and enterprise    the community version is under the open source licenses  while the indie mobile  professional and enterprise versions  which contain additional functionality and libraries  e g  charts and data visualization  enterprise controls  virtual keyboard etc    are commercially sold by the qt company     qt is available under the following copyright licenses    qt commercial license   gnu gpl       gnu lgpl      and gnu lgpl       with qt special exception       qt   was officially released on    december       this new version marked a major change in the platform  with hardware accelerated graphics  qml and javascript playing a major role  the traditional c   only qwidgets continued to be supported  but did not benefit from the performance improvements available through the new architecture    qt  brings significant improvements to the speed and ease of developing user interfaces       framework development of qt   moved to open governance  taking place at qt project org  it is now possible for developers outside digia to submit patches and have them reviewed       starting with qt     the framework was split into individual modules      with qt     the architecture was modularized even further      qt is now split into essential and add on modules       qt comes with its own set of tools to ease cross platform development  that is otherwise cumbersome due to different set of development tools  qt creator is a cross platform ide for c   and qml  qt designer s gui layout design functionality is integrated into this relatively new ide  although qt designer can still be called as a standalone tool     in addition to qt creator  qt provides a handy makefile generation tool  qmake  a tool that automates the generation of makefiles for development project across different platforms  without qmake  one should write different makefiles for each platform  so it is a useful tool for transparent handling of differences in various platforms     there are other tools available in qt  including qt designer  qt assistant  both are embedded in qt creator now   qt assistant  for translating gui   uic  user interface compiler   moc  meta object system compiler for handling signals and slots   various other converters  compiling and linking also released with qt     qt has a range of bindings for various languages    which implement some or all of its feature set     because of simplicity  robustness  native performance  cross platform compatibility and both commercial and open source licenses  many organizations in many parts of the world use qt  these include but are not limited to european space agency    dreamworks      lucasfilm      panasonic    philips    samsung    siemens    volvo    walt disney animation studios    blizzard entertainment      example applications using qt are altera quartus  a design and simulation tool for programmable logic  autodesk maya      bitcoin core  cameleon  programming language   mathematica    google earth    kde    a desktop environment for unix like operating systems  skype    spotify for linux    ubuntu    virtualbox  an os virtualization software package  musescore music score writing software  and the vlc media player       haavard nord and eirik chambe eng  the original developers of qt and the ceo and president  respectively  of trolltech  began development of  qt  in       three years before the company was incorporated as quasar technologies  then changed the name to troll tech and then to trolltech      the toolkit was called qt because the letter q looked appealing in haavard s emacs typeface  and  t  was inspired by xt  the x toolkit      the first two versions of qt had only two flavors  qt x   for unix and qt windows for windows  the windows platform was only available under a proprietary license  which meant free open source applications written in qt for x   could not be ported to windows without purchasing the proprietary edition     at the end of       trolltech released qt      which added support for mac os x  the mac os x support was available only in the proprietary license until june       when trolltech released qt     with mac os x support available under the gpl     in june       trolltech released qt           nokia acquired trolltech asa on    june      and changed the name first to qt software  then to qt development frameworks  since then it focused on qt development to turn it into the main development platform for its devices  including a port to the symbian s   platform  version     of the nokia qt sdk was released on    june         the source code was made available over gitorious  a community oriented git source code repository  to gather an even broader community that is not only using qt but also helping to improve it     in february       nokia announced its decision to drop symbian technologies and base their future smartphones on microsoft platform instead  one month later  nokia announced the sale of qt s commercial licensing and professional services to digia  with the immediate goal of taking qt support to android  ios and windows   platforms  and to continue focusing on desktop and embedded development  although nokia was to remain the main development force behind the framework at that time     in march       nokia sold the commercial licensing part of qt to digia creating qt commercial  in august       digia announced that it will acquire qt from nokia   the qt team started working in digia in september         qt team at digia  released qt     within a month  and released newer versions every   months with new features and additional supported platforms     at all times  qt was available under a commercial license that allows developing proprietary applications with no restrictions on licensing  in addition  qt has been gradually made available under several increasingly free licenses     until version       source code for qt was released under the freeqt license  this was viewed as not compliant with the open source principle by the open source initiative and the free software definition by free software foundation because  while the source was available  it did not allow the redistribution of modified versions     controversy erupted around      when it became clear that the k desktop environment  now known as the kde software compilation  was going to become one of the leading desktop environments for linux  as it was based on qt  many people in the free software movement worried that an essential piece of one of their major operating systems would be proprietary     with the release of version     of the toolkit  the license was changed to the q public license  qpl   a free software license but one regarded by the free software foundation as incompatible with the gpl  compromises were sought between kde and trolltech whereby qt would not be able to fall under a more restrictive license than the qpl  even if trolltech was bought out or went bankrupt  this led to the creation of the kde free qt foundation  which guarantees that qt would fall under a bsd style license should no free open source version of qt be released during    months     in       qt x       was released under the gpl v     ending all controversy regarding gpl compatibility     in       members of the kde on cygwin project began porting the gpl licensed qt x   code base to windows    this was in response to trolltech s refusal to license qt windows under the gpl on the grounds that windows was not a free open source software platform      the project achieved reasonable success although it never reached production quality     this was resolved when trolltech released qt windows   under the gpl in june       qtxa   now supports the same set of platforms in the free software open source editions as in the proprietary edition  so it is now possible to create gpl licensed free open source applications using qt on all supported platforms  the gpl v  with special exception   was later added as an added licensing option  the gpl exception allows the final application to be licensed under various gpl incompatible free software open source licenses such as the mozilla public license         on    january       qt version     added another option  the lgpl    which should make qt even more attractive for non gpl open source projects and for closed applications       in march       nokia sold the commercial licensing part of qt to digia creating qt commercial    in september       digia transferred the qt business and copyrights to their wholly owned subsidiary  the qt company  