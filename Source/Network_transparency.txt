 network transparency in its most general sense refers to the ability of a protocol to transmit data over the network in a manner which is transparent  invisible  to those using the applications that are using the protocol     the term is often partially correctly applied in the context of the x window system  which is able to transmit graphical data over the network and integrate it seamlessly with applications running and displaying locally  however  certain extensions of the x window system are not capable of working over the network              in a centralized database system  the only available resource that needs to be shielded from the user is the data  that is  the storage system   in a distributed dbms  a second resource needs to be managed in much the same manner  the network  preferably  the user should be protected from the network operational details  then there would be no difference between database applications that would run on the centralized database and those that would run on a distributed one  this kind of transparency is referred to as network transparency or distribution transparency  from a database management system  dbms  perspective  distribution transparency requires that users do not have to specify where data is located     some have separated distribution transparency into location transparency and naming transparency     location transparency in commands used to perform a task is independent both of the locations of the data  and of the system on which an operation is carried out     naming transparency means that a unique name is provided for each object in the database     transparency in firewall technology can be defined at the networking  ip or internet layer  or at the application layer     transparency at the ip layer means the client targets the real ip address of the server  if a connection is non transparent  then the client targets an intermediate host  address   which could be a proxy or a caching server  ip layer transparency could be also defined from the point of server s view  if the connection is transparent  the server sees the real client ip  if it is non transparent  the server sees the ip of the intermediate host     transparency at the application layer means the client application uses the protocol in a different way  an example of a transparent http request for a server     get   http    nhost  example orgnconnection  keep alive    an example non transparent http request for a proxy  cache      get http   foo bar  http    nproxy connection  keep alive    application layer transparency is symmetric when the same working mode is used on both the sides  the transparency is asymmetric when the firewall  usually a proxy  converts server type requests to proxy type or vice versa     transparency at the ip layer does not mean automatically application layer transparency  