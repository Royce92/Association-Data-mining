 software engineering is the study and an application of engineering to the design  development  and maintenance of software        typical formal definitions of software engineering are             when the first digital computers appeared in the early     s   the instructions to make them operate were wired into the machine  practitioners quickly realized that this design was not flexible and came up with the  stored program architecture  or von neumann architecture  thus the division between  hardware  and  software  began with abstraction being used to deal with the complexity of computing     programming languages started to appear in the     s and this was also another major step in abstraction  major languages such as fortran  algol  and cobol were released in the late     s to deal with scientific  algorithmic  and business problems respectively  e w  dijkstra wrote his seminal paper   go to statement considered harmful    in      and david parnas introduced the key concept of modularity and information hiding in       to help programmers deal with the ever increasing complexity of software systems     the term  software engineering   coined by margaret hamilton      was first used in      as a title for the world s first conference on software engineering  sponsored and facilitated by nato  the conference was attended by international experts on software who agreed on defining best practices for software grounded in the application of engineering  the result of the conference is a report that defines how software should be developed i e   software engineering foundations  the original report is publicly available       the discipline of software engineering was created to address poor quality of software  get projects exceeding time and budget under control  and ensure that software is built systematically  rigorously  measurably  on time  on budget  and within specification  engineering already addresses all these issues  hence the same principles used in engineering can be applied to software  the widespread lack of best practices for software at the time was perceived as a  software crisis            barry w  boehm documented several key advances to the field in his      book   software engineering economics     these include his constructive cost model  cocomo   which relates software development effort for a program  in man years t  to source lines of code  sloc       the book analyzes sixty three software projects and concludes the cost of fixing errors escalates as we move the project toward field use  the book also asserts that the key driver of software cost is the capability of the software development team     in       the software engineering institute  sei  was established as a federally funded research and development center headquartered on the campus of carnegie mellon university in pittsburgh  pennsylvania  united states  watts humphrey founded the sei software process program  aimed at understanding and managing the software engineering process  his      book  managing the software process    asserts that the software development process can and should be controlled  measured  and improved  the process maturity levels introduced would become the capability maturity model integration for development cmmi dev   which has defined how the us government evaluates the abilities of a software development team     modern  generally accepted best practices for software engineering have been collected by the iso iec jtc   sc   subcommittee and published as the software engineering body of knowledge  swebok        software engineering can be divided into ten subdisciplines  they are      knowledge of computer programming is a prerequisite to becoming a software engineer  in      the ieee computer society produced the swebok  which has been published as iso iec technical report            describing the body of knowledge that they recommend to be mastered by a graduate software engineer with four years of experience    many software engineers enter the profession by obtaining a university degree or training at a vocational school  one standard international curriculum for undergraduate software engineering degrees was defined by the ccse  and updated in         a number of universities have software engineering degree programs  as of     update  there were     campus programs     online programs      masters level programs     doctorate level programs  and    certificate level programs in the united states       for practitioners who wish to become proficient and recognized as professional software engineers  the ieee offers two certifications that extend knowledge above level achieved by an academic degree  certified software development associate and certified software development professional     in addition to university education  many companies sponsor internships for students wishing to pursue careers in information technology  these internships can introduce the student to interesting real world tasks that typical software engineers encounter every day  similar experience can be gained through military service in software engineering     legal requirements for the licensing or certification of professional software engineers vary around the world  in the uk  the british computer society licenses software engineers and members of the society can also become chartered engineers  ceng   while in some areas of canada  such as alberta  british columbia  ontario    and quebec  software engineers can hold the professional engineer  p eng  designation and or the information systems professional  i s p   designation  in canada  there is a legal requirement to have p eng when one wants to use the title  engineer  or practice  software engineering      the united states  starting from      offers an ncees professional engineer exam for software engineering  thereby allowing software engineers to be licensed and recognized    mandatory licensing is currently still largely debated  and perceived as controversial  in some parts of the us such as texas  the use of the term engineer is regulated by law and reserved only for use by individuals who have a professional engineer license  the ieee informs the professional engineer license is not required unless the individual would work for public where health of others could be at risk if the engineer was not fully qualified to required standards by the particular state  professional engineer licenses are specific to the state which has awarded them  and have to be regularly retaken     the ieee computer society and the acm  the two main us based professional organizations of software engineering  publish guides to the profession of software engineering  the ieee s guide to the software engineering body of knowledge        version  or swebok  defines the field and describes the knowledge the ieee expects a practicing software engineer to have  the most current swebok v  is an updated version and was released in         the ieee also promulgates a  software engineering code of ethics        in       the u  s  bureau of labor statistics counted         software engineers holding jobs in the u s   in the same time period there were some     million practitioners employed in the u s  in all other engineering disciplines combined    due to its relative newness as a field of study  formal education in software engineering is often taught as part of a computer science curriculum  and many software engineers hold computer science degrees and have no engineering background whatsoever       many software engineers work as employees or contractors  software engineers work with businesses  government agencies  civilian or military   and non profit organizations  some software engineers work for themselves as freelancers  some organizations have specialists to perform each of the tasks in the software development process  other organizations require software engineers to do many or all of them  in large projects  people may specialize in only one role  in small projects  people may fill several or all roles at the same time  specializations include  in industry  analysts  architects  developers  testers  technical support  middleware analysts  managers  and in academia  educators  researchers      most software engineers and programmers work    hours a week  but about    percent of software engineers and    percent of programmers worked more than    hours a week in       injuries in these occupations are rare  however  like other workers who spend long periods in front of a computer terminal typing at a keyboard  engineers and programmers are susceptible to eyestrain  back discomfort  and hand and wrist problems such as carpal tunnel syndrome       the field s future looks bright according to money magazine and salary com  which rated software engineer as the best job in the united states in         in       software engineering was again ranked as the best job in the united states  this time by careercast com       the software engineering institute offers certifications on specific topics like security  process improvement and software architecture    apple  ibm  microsoft and other companies also sponsor their own certification examinations  many it certification programs are oriented toward specific technologies  and managed by the vendors of these technologies    these certification programs are tailored to the institutions that would employ people who use these technologies     broader certification of general software engineering skills is available through various professional societies  as of     update  the ieee had certified over     software professionals as a certified software development professional  csdp     in      they added an entry level certification known as the certified software development associate  csda     the acm had a professional certification program in the early     s citation needed which was discontinued due to lack of interest  the acm examined the possibility of professional certification of software engineers in the late     s  but eventually decided that such certification was inappropriate for the professional industrial practice of software engineering       in the u k  the british computer society has developed a legally recognized professional certification called chartered it professional  citp   available to fully qualified members  mbcs   software engineers may be eligible for membership of the institution of engineering and technology and so qualify for chartered engineer status  in canada the canadian information processing society has developed a legally recognized professional certification called information systems professional  isp     in ontario  canada  software engineers who graduate from a canadian engineering accreditation board  ceab  accredited program  successfully complete peo s  professional engineers ontario  professional practice examination  ppe  and have at least    months of acceptable engineering experience are eligible to be licensed through the professional engineers ontario and can become professional engineers p eng    the peo does not recognize any online or distance education however  and does not consider computer science programs to be equivalent to software engineering programs despite the tremendous overlap between the two  this has sparked controversy and a certification war  it has also held the number of p eng holders for the profession exceptionally low  the vast majority of working professionals in the field hold a degree in cs  not se  given the difficult certification path for holders of non se degrees  most never bother to pursue the license     the initial impact of outsourcing  and the relatively lower cost of international human resources in developing third world countries led to a massive migration of software development activities from corporations in north america and europe to india and later  china  russia  and other developing countries  this approach had some flaws  mainly the distance   timezone difference that prevented human interaction between clients and developers and the massive job transfer  this had a negative impact on many aspects of the software engineering profession  for example  some students in the developed world avoid education related to software engineering because of the fear of offshore outsourcing  importing software products or services from other countries  and of being displaced by foreign visa workers    although statistics do not currently show a threat to software engineering itself  a related career  computer programming does appear to have been affected      nevertheless  the ability to smartly leverage offshore and near shore resources via the follow the sun workflow has improved the overall operational capability of many organizations    when north americans are leaving work  asians are just arriving to work  when asians are leaving work  europeans are arriving to work  this provides a continuous ability to have human oversight on business critical processes    hours per day  without paying overtime compensation or disrupting a key human resource  sleep patterns     while global outsourcing has several advantages  global   and generally distributed   development can run into serious difficulties resulting from the distance between developers  this is due to the key elements of this type of distance which have been identified as geographical  temporal  cultural and communication  which includes the use of different languages and dialects of english in different locations     research has been carried out in the area of global software development over the last    years and an extensive body of relevant work published which highlights the benefits and problems associated with the complex activity  as with other aspects of software engineering research is ongoing in this and related areas     software engineering is a direct sub field of engineering and has an overlap with computer science and management sciencecitation needed  it is also considered a part of overall systems engineering     typical formal definitions of software engineering are     the term has been used less formally     software engineering sees its practitioners as individuals who follow well defined engineering approaches to problem solving  these approaches are specified in various software engineering books and research papers  always with the connotations of predictability  precision  mitigated risk and professionalism  this perspective has led to calls for licensing  certification and codified bodies of knowledge as mechanisms for spreading the engineering knowledge and maturing the field     software craftsmanship has been proposed by a body of software developers as an alternative that emphasizes the coding skills and accountability of the software developers themselves without professionalism or any prescribed curriculum leading to ad hoc problem solving  craftmanship  without engineering  lack of predictability  precision  missing risk mitigation  methods are informal and poorly defined   the software craftsmanship manifesto extends the agile software manifesto   and draws a metaphor between modern software development and the apprenticeship model of medieval europe     software engineering extends engineering and draws on the engineering model  i e  engineering process  engineering project management  engineering requirements  engineering design  engineering construction  and engineering validation  the concept is so new that it is rarely understood  and it is widely misinterpreted  including in software engineering textbooks  papers  and among the communities of programmers and crafters     one of the core issues in software engineering is that its approaches are not empirical enough because a real world validation of approaches is usually absent  or very limited and hence software engineering is often misinterpreted as feasible only in a  theoretical environment      dijkstra who developed computer languages in the last century refuted the concepts of  software engineering  which was prevalent thirty years ago in the     s  arguing that those terms were poor analogies for what he called the  radical novelty  of computer science     a number of these phenomena have been bundled under the name  software engineering   as economics is known as  the miserable science   software engineering should be known as  the doomed discipline   doomed because it cannot even approach its goal since its goal is self contradictory  software engineering  of course  presents itself as another worthy cause  but that is eyewash  if you carefully read its literature and analyse what its devotees actually do  you will discover that software engineering has accepted as its charter  how to program if you cannot     