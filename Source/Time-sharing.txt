 in computing  time sharing is the sharing of a computing resource among many users by means of multiprogramming and multi tasking  its introduction in the     s  and emergence as the prominent model of computing in the     s  represented a major technological shift in the history of computing     by allowing a large number of users to interact concurrently with a single computer  time sharing dramatically lowered the cost of providing computing capability  made it possible for individuals and organizations to use a computer without owning one  and promoted the interactive use of computers and the development of new interactive applications             the earliest computers were extremely expensive devices  and very slow in comparison to recent models  machines were typically dedicated to a particular set of tasks and operated by control panels  the operator manually entering small programs via switches in order to load and run a series of programs  these programs might take hours  or even weeks  to run  as computers grew in speed  run times dropped  and soon the time taken to start up the next program became a concern  batch processing methodologies evolved to decrease these  dead periods  by queuing up programs so that as soon as one program completed  the next would start citation needed    to support a batch processing operation  a number of comparatively inexpensive card punch or paper tape writers were used by programmers to write their programs  offline   when typing  or punching  was complete  the programs were submitted to the operations team  which scheduled them to be run  important programs were started quickly  how long before less important programs were started was unpredictable  when the program run was finally completed  the output  generally printed  was returned to the programmer  the complete process might take days  during which time the programmer might never see the computer citation needed    the alternative of allowing the user to operate the computer directly was generally far too expensive to consider  this was because users might have long periods of entering code while the computer remained idle  this situation limited interactive development to those organizations that could afford to waste computing cycles  large universities for the most part  programmers at the universities decried the behaviors that batch processing imposed  to the point that stanford students made a short film humorously critiquing it   they experimented with new ways to interact directly with the computer  a field today known as human computer interaction     time sharing was developed out of the realization that while any single user would make inefficient use of a computer  a large group of users together would not  this was due to the pattern of interaction  typically an individual user entered bursts of information followed by long pauses but a group of users working at the same time would mean that the pauses of one user would be filled by the activity of the others  given an optimal group size  the overall process could be very efficient  similarly  small slices of time spent waiting for disk  tape  or network input could be granted to other users citation needed    implementing a system able to take advantage of this would be difficult  batch processing was really a methodological development on top of the earliest systems  computers still ran single programs for single users at any time  all that batch processing changed was the time delay between one program and the next  developing a system that supported multiple users at the same time was a completely different concept  the  state  of each user and their programs would have to be kept in the machine  and then switched between quickly  this would take up computer cycles  and on the slow machines of the era this was a concern  however  as computers rapidly improved in speed  and especially in size of core memory in which users  states were retained  the overhead of time sharing continually decreased  relatively citation needed    the concept was first described publicly in early      by bob bemer as part of an article in automatic control magazine  the first project to implement a time sharing system was initiated by john mccarthy in late       on a modified ibm      and later on an additionally modified ibm      computer  although he left to work on project mac and other projects  one of the results of the project  known as the compatible time sharing system or ctss  was demonstrated in november       ctss has a good claim to be the first time sharing system and remained in use until       another contender for the first demonstrated time sharing system was plato ii  created by donald bitzer at a public demonstration at robert allerton park near the university of illinois in early       bitzer has long said that the plato project would have gotten the patent on time sharing if only the university of illinois had known how to process patent applications faster  but at the time university patents were so few and far between  they took a long time to be submitted  the first commercially successful time sharing system was the dartmouth time sharing system citation needed    throughout the late     s and the     s  computer terminals were multiplexed onto large institutional mainframe computers  centralized computing systems   which in many implementations sequentially polled the terminals to see if there was any additional data or action requested by the computer user  later technology in interconnections were interrupt driven  and some of these used parallel data transfer technologies such as the ieee     standard  generally  computer terminals were utilized on college properties in much the same places as desktop computers or personal computers are found today  in the earliest days of personal computers  many were in fact used as particularly smart terminals for time sharing systems citation needed    with the rise of microcomputing in the early     s  time sharing faded into the background because individual microprocessors were sufficiently inexpensive that a single person could have all the cpu time dedicated solely to their needs  even when idle  however  the internet has brought the general concept of time sharing back into popularity  expensive corporate server farms costing millions can host thousands of customers all sharing the same common resources  as with the early serial terminals  websites operate primarily in bursts of activity followed by periods of idle time  this bursting nature permits the service to be used by many website customers at once  and none of them notice any delays in communications until the servers start to get very busy citation needed    in the     s  several companies started providing time sharing services as service bureaus  early systems used teletype model    ksr or asr or teletype model    ksr or asr machines in ascii environments  and ibm selectric typewriter based terminals in ebcdic environments  they would connect to the central computer by dial up bell    a modem or acoustically coupled modems operating at       characters per second  later terminals and modems supported        characters per second  the time sharing system would provide a complete operating environment  including a variety of programming language processors  various software packages  file storage  bulk printing  and off line storage  users were charged rent for the terminal  a charge for hours of connect time  a charge for seconds of cpu time  and a charge for kilobyte months of disk storage citation needed    common systems used for time sharing included the sds      the pdp     and the ibm      companies providing this service included ge s geisco  ibm subsidiary the service bureau corporation  tymshare  founded in        national css  founded in      and bought by dun   bradstreet in        dial data  bought by tymshare in        and bolt  beranek  and newman  bbn   by       there were    such service bureaus serving the us national institutes of health  nih  alone   the auerbach guide to timesharing        lists     different timesharing services using equipment from burroughs  cdc  dec  hp  honeywell  ibm  rca  univac and xds      beginning in      the multics operating system was designed as a computing utility  modeled on the electrical or telephone utilities  in the     s ted nelson s original  xanadu  hypertext repository was envisioned as such a service  it seemed as the computer industry grew that no such consolidation of computing resources would occur as timesharing systems  however in the     s the concept was revived in somewhat modified form as cloud computing citation needed    time sharing was the first time that multiple processes  owned by different users  were running on a single machine  and these processes could interfere with one another   for example  one process might alter shared resources which another process relied on  such as a variable stored in memory  when only one user was using the system  this would result in possibly wrong output   but with multiple users  this might mean that other users got to see information they were not meant to see     to prevent this from happening  an operating system needed to enforce a set of policies that determined which privileges each process had  for example  the operating system might deny access to a certain variable by a certain process     the first international conference on computer security in london in      was primarily driven by the time sharing industry and its customers citation needed    significant early timesharing systems   