 a thin client  sometimes also called a lean  zero or slim client  is a computer or a computer program that depends heavily on another computer  its server  to fulfill its computational roles  this is different from the traditional fat client  which is a computer designed to take on these roles by itself  the specific roles assumed by the server may vary  from providing data persistence  for example  for diskless nodes  to actual information processing on the client s behalf     thin clients occur as components of a broader computer infrastructure  where many clients share their computations with the same server  as such  thin client infrastructures can be viewed as providing some computing service via several user interfaces  this is desirable in contexts where individual fat clients have much more functionality or power than the infrastructure requires     thin client computing is also a way of easily maintaining computational services at a reduced total cost of ownership      the most common type of modern thin client is a low end computer terminal which only provides a graphical user interface   or more recently  in some cases  a web browser   to the end user             thin clients have their roots in multi user systems  traditionally mainframes accessed by some sort of terminal computer  as computer graphics matured  these terminals transitioned from providing a command line interface to a full graphical user interface  as is common on modern   advanced thin clients  the prototypical multiuser environment along these lines  unix  began to support fully graphical x terminals  i e   devices running display server software  from about       x terminals remained relatively popular even after the arrival of other thin clients in the mid late     s citation needed modern unix derivatives like bsd and gnu linux continue the tradition of the multi user  remote display input session  typically  x software is not made available on non x based thin clients  although no technical reason for this exclusion would prevent it citation needed    windows nt became capable of multi user operations primarily through the efforts of citrix systems  which repackaged nt       as the multi user operating system winframe in       microsoft licensed this technology back from citrix and implemented it into windows nt     terminal server edition  under a project codenamed  hydra   windows nt then became the basis of windows      and windows xp  as of     update microsoft windows systems support graphical terminals via the remote desktop services component     the term thin client was coined in      by tim negris  vp of server marketing at oracle corp   while working with company founder larry ellison on the launch of oracle    at the time  oracle wished to differentiate their server oriented software from microsoft s desktop oriented products  ellison subsequently popularized negris  buzzword with frequent use in his speeches and interviews about oracle products     the term stuck for several reasons  the earlier term  graphical terminal  had been chosen to distinguish such terminals from text based terminals  and thus put the emphasis heavily on graphics   which became obsolete as a distinguishing characteristic in the     s as text only physical terminals themselves became obsolete  and text only computer systems  a few of which existed in the     s  were no longer manufactured  the term  thin client  also conveys better what was then viewed as the fundamental difference  thin clients can be designed with less expensive hardware  because they have reduced computational workloads     by the     s  however  thin clients were not the only desktop devices for general purpose computing that were  thin    in the sense of having a small form factor and being relatively inexpensive  the nettop form factor for desktop pcs was introduced  and nettops could run full feature windows or linux  tablets and tablet laptop hybrids had also entered the market  however  while there was now little size difference  thin clients retained some key advantages over these competitors  such as not needing a local drive  however   thin client  can be a misnomer for slim form factor computers using flash memory such as compactflash  sd card  or permanent flash memory as a hard disc substitute     the server  in taking on the whole processing load of several clients  forms a single point of failure for those clients  this has both positive and negative aspects  on one hand  the security threat model for the software becomes more focused on the servers  the clients do not run the software  therefore  only a small number of computers  the servers  need to be secured at a software level  rather than securing software installed on every single client computer  although client computers may still require physical security and strong authentication  to prevent unauthorised access  depending on requirements   on the other hand  any denial of service attack against the server will limit the access of many clients  the server software is typically written with virtual machine technology so every client is isolated and a client crash is easily handled and rebooted  the single point of failure can still exist  however  if the server crashes  data loss is possible     for small networks  this single point of failure property might be expanded  the hosting server can be integrated with file servers and print servers relevant to its clients  this can simplify the network and its maintenance  but might increase the risk against that server     in practice  redundancy can be provided both in the form of additional connectivity from server to the network as well as in the servers themselves  using features like raid  distributed servers  multiple networked servers appearing as one server to the users   clustered filesystems  which allow files to be accessed from multiple servers   vmware high availability and fault tolerance or citrix xenapp s load balancing     while the server must be robust enough to handle several client sessions at once  the clients can be assembled from much cheaper hardware than that of a fat client  many clients have minimal ram  some do not even have a hard drive  this reduces the power consumption of those clients  and makes the system marginally scalable  i e  it is relatively cheap to connect additional client terminals  the thin clients usually have a very low total cost of ownership  but the need for a robust server infrastructure offsets some cost savings  thin clients also generally use very low power and might not even require cooling fans  but the servers consume high power and almost always require an environmentally controlled air conditioned server room     since the clients are made from low cost hardware with few moving parts  they can operate in more hostile environments than conventional computers  however  they inevitably need a network connection to their server  which must be isolated from such hostile environments  since thin clients are cheap  they offer a low risk of theft in general  and are easy to replace if stolen or broken  since they do not have any complicated boot images  the problem of boot image control is centralized to the server     on the other hand  to achieve this simplicity  thin clients sometimes lag behind thick clients  pc desktops  in terms of extensibility  for example  if a local software utility or set of device drivers are needed in order to support a locally attached peripheral device  e g  printer  scanner  biometric security device   the thin client operating system may lack the resources needed to fully integrate the needed dependencies  modern thin clients attempt to address this limitation via port mapping or usb redirection software  however  these methods cannot address all use case scenarios for the vast number of peripheral types being put to use today     thin clients tend to be optimized for use with simple lines  curves  and text  which can be rapidly drawn by the client using predefined stored procedures and cached bitmap data  in this regard  thin clients work well for basic office applications such as spreadsheets  word processing  data entry  and so forth     however  all thin clients suffer performance problems when large areas of the graphics display must be updated rapidly with high detail bitmap graphics  which may also need to be redrawn several times per second for animation purposes  in a few cases it may be possible to use a video stream that was already previously compressed such as mpeg or h     video  but many graphical programs such as photo editors   d drawing programs  and animation tools require high detail uncompressed bitmaps to be displayed in order for the software to be used effectively  graphics rich  d games can be completely unusable on a thin client unless the updated screen area is kept very small or the overall screen resolution is very low  to reduce the amount of data sent to the client     in an attempt to reduce network bandwidth  the server may try to compress high detail bitmaps on the fly before sending the data to the client  but this adds latency to the client server communications  and may reduce user interface responsiveness  many thin clients offer options to turn off various graphics rich user interface effects in order to increase performance  such as not showing the contents of a window while dragging or not displaying a desktop background     the following options allow a pc to be used as a thin client   in some cases  even if it has no working hard drive     traditionally  a thin client ran a full operating system for the purposes of connecting to other computers citation needed some thin clients  such as the sun ray  use a simpler protocol for communicating display updates  and these are sometimes called ultra thin clients or zero clients    their tiny operating systems merely initialize the network  begin the networking protocol  handle display of the server s output  and transmit user input events citation needed the full desktop is run remotely and the displayed graphics and text are compressed with either a remote display protocol such as pcoip  or even just a video codec such as vp  or daala  and sent to the zero client  the client silicon is now much simpler and lower costcitation needed as all it requires is a video decodercitation needed and basic i o     a run time environment  rte  client contains task specific applications  e g  mozilla firefox for internet browsing  and only the minimal  often customized  underlying and supporting code  bios  firmware  kernel  libraries  plug ins  etc   to run only those applications  it contains all and only the code needed to accomplish its specific task  thus it is more than a zero client but less than a typical thin client computer  the rte client does not have a general purpose operating system   it usually lacks shells  terminal windows   is not designed to be patched  updated online   has minimal connectivity to external resources  and is often found in read only media  e g  tamper resistant rom chips  cd rom  etc    attempts to inject or run any other applications processes threads results in crashing the kernel  system  citation needed due to the need to physically update the device  rte clients are mostly found in stable environments demanding high security     web thin clients only provide a web browser  and rely on web applications to provide general purpose computing functionality  however  note that web applications may use web storage to store some data locally  e g  for  offline mode   and they can perform significant processing tasks as well  rich internet applications for instance may cross the boundary  and html  web applications can leverage browsers as run time environments through the use of a cache manifest or so called  packaged apps   in firefox os and chrome      examples of web thin clients include chromebooks and chromeboxes  which run chrome os  and phones running firefox os     chromebooks and chromeboxes also have the capability of remote desktop using the free chrome remote desktop browser extension  which means  other than being a web thin client  they can also be used as an ultra thin client  see above  to access pc or mac applications that do not run on the chromebook directly  indeed  they can be used as a web thin client and an ultra thin client simultaneously  with the user switching between web browser and pc or mac application windows with a click     chromebooks are also able to store user documents locally   though  with the exception of media files  which have a dedicated player application to play them   all such files can only be opened and processed with web applications  since traditional desktop applications cannot be installed in chrome os     web thin clients are similar to rte clients  but unlike first generation rte clients the operating system can typically be updated  chrome os  for example  automatically updates itself if its update servers  which are hosted by google  are not blocked by a firewall   while still being tamper resistant due to its use of trusted computing technologies     the notion of a thin client extends indirectly to any client server architecture  in which case  a thin client application is simply one which relies on its server to process most or all of its business logic  this idiom is relatively common for computer security reasons  a client obviously cannot be trusted with the logic that determines how trustworthy they are  because an adversary can circumvent that logic     however  in web development in particular  many client applications are becoming fatter  this is due to the adoption of heavily client side technologies like flash and ajax  which are themselves strongly driven by the highly interactive nature of web     applications  