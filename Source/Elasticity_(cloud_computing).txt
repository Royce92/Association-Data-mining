 in cloud computing  elasticity is defined as the degree to which a system is able to adapt to workload changes by provisioning and deprovisioning resources in an autonomic manner  such that at each point in time the available resources match the current demand as closely as possible   it is a defining characteristic  that differentiates it from previously proposed computing paradigms  such as grid computing  this dynamic variation in the use of computer resources to meet a varying workload is called  elastic computing     in general an elastic cloud application or process has three elasticity dimensions   cost  quality  and resources  enabling it to increase and decrease its cost  quality  or available resources  as to accommodate specific requirements             let us illustrate elasticity through a simple example of a service provider who wants to run a website on an iaas cloud  at moment   the website is unpopular and a single machine  most commonly a virtual machine  is sufficient to serve all web users  at moment   the website suddenly becomes popular  for example  as a result of a flash crowd  and a single machine is no longer sufficient to serve all users  based on the amount of web users simultaneously accessing the website and the resource requirements of the web server  it might be that ten machines are needed  an elastic system should immediately detect this condition and provision nine additional machines from the cloud  so as to serve all web users responsively     at time   the website becomes unpopular again  the ten machines that are currently allocated to the website are mostly idle and a single machine would be sufficient to serve the few users who are accessing the website  an elastic system should immediately detect this condition and deprovision nine machines and release them to the cloud     elasticity aims at matching the amount of resources allocated to a service with the amount of resources it actually requires  avoiding over  or under provisioning  over provisioning  i e   allocating more resources than required  should be avoided as the service provider often has to pay for the resources that are allocated to the service  for example  at the time of this writing  amazon ec  charges        hour for an  extra large  virtual machine  if a service is allocated two virtual machines  instead of one required  the service provider wastes        every year  hence  the service provider s expenses are higher than optimal and the profit is reduced     under provisioning  i e   allocating fewer resources than required  must be avoided  otherwise the service cannot serve its users with a good service  in the above example  under provisioning the website may make it seem slow or unreachable  web users eventually give up on accessing it  thus  the service provider loses customers  on the long term  the provider s income will decrease  which also reduces the profit     one potential problem is that elasticity takes time  a cloud virtual machine  vm  can be acquired at any time by the user  however  it may take up to several minutes for the acquired vm to be ready to use  the vm startup time is dependent on factors  such as image size  vm type  data center location  number of vms  etc   cloud providers have different vm startup performance  this implies any control mechanism designed for elastic applications must consider in its decision process the time needed for the elasticity actions to take effect   such as provisioning another vm for a specific application component     elastic applications can allocate and deallocate resources  such as vms  on demand for specific application components  this makes cloud resources volatile  and traditional monitoring tools which associate monitoring data with a particular resource  i e  vm   such as ganglia or nagios  are no longer suitable for monitoring the behavior of elastic applications  for example  during its lifetime  a data storage tier of an elastic application might add and remove data storage vms due to cost and performance requirements  varying the number of used vms  thus  additional information is needed in monitoring elastic applications  such as associating the logical application structure over the underlying virtual infrastructure   this in turn generates other problems  such as how to aggregate data from multiple vms towards extracting the behavior of the application component running on top of those vms  as different metrics might need to be aggregated differently  e g   cpu usage could be averaged  network transfer might be summed up      when deploying applications in cloud infrastructures  iaas paas   requirements of the stakeholder need to be considered in order to ensure proper elasticity behavior  even though traditionally one would try to find the optimal trade off between cost and quality or performance  for real world cloud users requirements regarding the behavior are more complex and target multiple dimensions of elasticity  e g   sybl       cloud applications can be of varying types and complexities  with multiple levels of artifacts deployed in layers  controlling such structures must take into consideration a variety of issues  an approach in this sense being rsybl   for multi level control  control systems need to consider the impact lower level control has upon higher level ones and vice versa  e g   controlling virtual machines  web containers  or web services in the same time   as well as conflicts which may appear between various control strategies from various levels    