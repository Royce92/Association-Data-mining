 a hypervisor or virtual machine monitor  vmm  is a piece of computer software  firmware or hardware that creates and runs virtual machines     a computer on which a hypervisor is running one or more virtual machines is defined as a host machine  each virtual machine is called a guest machine  the hypervisor presents the guest operating systems with a virtual operating platform and manages the execution of the guest operating systems  multiple instances of a variety of operating systems may share the virtualized hardware resources             in their      article  formal requirements for virtualizable third generation architectures  gerald j  popek and robert p  goldberg classified two types of hypervisor      however  the distinction between these two types is not necessarily clear  linux s kernel based virtual machine  kvm  and freebsd s bhyve are kernel modules  that effectively convert the host operating system to a type   hypervisor   nevertheless  since linux distributions and freebsd are still general purpose operating systems  with other applications competing for vm resources  kvm and bhyve can also be categorized as type   hypervisors      in       a us software development company called lynuxworks proposed a type    zero  hypervisor u   bone with no kernel or operating system whatsoever   u   bwhich might not be entirely possible      the first hypervisors providing full virtualization were the test tool simmon and ibm s one off research cp    system  which began production use in january       and became the first version of ibm s cp cms operating system  cp    ran on a s        that was modified at the ibm cambridge scientific center to support dynamic address translation  a key feature that allowed virtualization  prior to this time  computer hardware had only been virtualized enough to allow multiple user applications to run concurrently  see ctss and ibm m     x   with cp     the hardware s supervisor state was virtualized as well  allowing multiple operating systems to run concurrently in separate virtual machine contexts     programmers soon re implemented cp     as cp     for the ibm system         the first production computer system capable of full virtualization  ibm first shipped this machine in       it included page translation table hardware for virtual memory  and other techniques that allowed a full virtualization of all kernel tasks  including i o and interrupt handling   note that its  official  operating system  the ill fated tss      did not employ full virtualization   both cp    and cp    began production use in       cp cms was available to ibm customers from      to       in source code form without support     cp cms formed part of ibm s attempt to build robust time sharing systems for its mainframe computers  by running multiple operating systems concurrently  the hypervisor increased system robustness and stability  even if one operating system crashed  the others would continue working without interruption  indeed  this even allowed beta or experimental versions of operating systems u   bor even of new hardware  u   bto be deployed and debugged  without jeopardizing the stable main production system  and without requiring costly additional development systems     ibm announced its system     series in      without any virtualization features  but added them in the august      advanced function announcement  virtualization has been featured in all successor systems  all modern day ibm mainframes  such as the zseries line  retain backward compatibility with the     s era ibm s     line  the      announcement also included vm      a reimplementation of cp cms for the s      unlike cp cms  ibm provided support for this version  though it was still distributed in source code form for several releases   vm stands for virtual machine  emphasizing that all  and not just some  of the hardware interfaces are virtualized  both vm and cp cms enjoyed early acceptance and rapid development by universities  corporate users  and time sharing vendors  as well as within ibm  users played an active role in ongoing development  anticipating trends seen in modern open source projects  however  in a series of disputed and bitter battles  time sharing lost out to batch processing through ibm political infighting  and vm remained ibm s  other  mainframe operating system for decades  losing to mvs  it enjoyed a resurgence of popularity and support from      as the z vm product  for example as the platform for linux for zseries     as mentioned above  the vm control program includes a hypervisor call handler that intercepts diag   diagnose   instructions used within a virtual machine  this provides fast path non virtualized execution of file system access and other operations  diag is a model dependent privileged instruction  not used in normal programming  and thus is not virtualized  it is therefore available for use as a signal to the  host  operating system   when first implemented in cp cms release      this use of diag provided an operating system interface that was analogous to the system     supervisor call instruction  svc   but that did not require altering or extending the system s virtualization of svc     in      ibm introduced the pr sm hypervisor to manage logical partitions  lpar      several factors led to a resurgence around      in the use of virtualization technology among unix and linux server vendors      major unix vendors  including sun microsystems  hp  ibm  and sgi  have been selling virtualized hardware since before       these have generally been large  expensive systems  in the multi million dollar range at the high end   although virtualization has also been available on some low  and mid range systems  such as ibm s pseries servers  sun oracle s t series coolthreads servers and hp superdome series machines     although solaris has always been the only guest domain os officially supported by sun oracle on their logical domains hypervisor  as of late     update  linux  ubuntu and gentoo   and freebsd have been ported to run on top of the hypervisor  and can all run simultaneously on the same processor  as fully virtualized independent guest oses   wind river  carrier grade linux  also runs on sun s hypervisor    full virtualization on sparc processors proved straightforward  since its inception in the mid     s sun deliberately kept the sparc architecture clean of artifacts that would have impeded virtualization   compare with virtualization on x   processors below        hp calls its technology to host multiple os technology on its itanium powered systems  integrity virtual machines   integrity vm   itanium can run hp ux  linux  windows and openvms  except for openvms  to be supported in a later release  these environments are also supported as virtual servers on hp s integrity vm platform  the hp ux operating system hosts the integrity vm hypervisor layer that allows for many important features of hp ux to be taken advantage of and provides major differentiation between this platform and other commodity platforms   such as processor hotswap  memory hotswap  and dynamic kernel updates without system reboot  while it heavily leverages hp ux  the integrity vm hypervisor is really a hybrid that runs on bare metal while guests are executing  running normal hp ux applications on an integrity vm host is heavily discouraged by whom  because integrity vm implements its own memory management  scheduling and i o policies that are tuned for virtual machines and are not as effective for normal applications  hp also provides more rigid partitioning of their integrity and hp     systems by way of vpar and npar technology  the former offering shared resource partitioning and the latter offering complete i o and processing isolation  the flexibility of virtual server environment  vse  has given way to its use more frequently in newer deployments citation needed    ibm provides virtualization partition technology known as logical partitioning  lpar  on system      zseries  pseries and iseries systems  for ibm s power systems  the power hypervisor  powervm  functions as a native  bare metal  hypervisor in firmware and provides isolation between lpars  processor capacity is provided to lpars in either a dedicated fashion or on an entitlement basis where unused capacity is harvested and can be re allocated to busy workloads  groups of lpars can have their processor capacity managed as if they were in a  pool    ibm refers to this capability as multiple shared processor pools  mspps  and implements it in servers with the power  processor  lpar and mspp capacity allocations can be dynamically changed  memory is allocated to each lpar  at lpar initiation or dynamically  and is address controlled by the power hypervisor  for real mode addressing by operating systems  aix  linux  ibm i   the power processors  power  onwards  have designed virtualization capabilities where a hardware address offset is evaluated with the os address offset to arrive at the physical memory address  input output  i o  adapters can be exclusively  owned  by lpars or shared by lpars through an appliance partition known as the virtual i o server  vios   the power hypervisor provides for high levels of reliability  availability and serviceability  ras  by facilitating hot add replace of many parts  model dependent  processors  memory  i o adapters  blowers  power units  disks  system controllers  etc   it is interesting to note that because this powervm hypervisor is integral and part of every single power system ibm has made since the power  systems  that every benchmark ever run on those systems is technically virtualized and as the benchmark results indicate this virtualization works extremely well  furthermore it is extremely secure and in fact to date there has never been a single reported security flaw reported in the powervm hypervisor itself     similar trends have occurred with x   x  _   server platforms  where open source projects such as xen have led virtualization efforts  these include hypervisors built on linux and solaris kernels as well as custom kernels  since these technologies span from large systems down to desktops  they are described in the next section     starting in       cpu vendors have added hardware virtualization assistance to their products  for example  intel vt x  codenamed vanderpool  and amd v  codenamed pacifica      an alternative approach requires modifying the guest operating system to make system calls to the hypervisor  rather than executing machine i o instructions that the hypervisor simulates  this is called paravirtualization in xen  a  hypercall  in parallels workstation  and a  diagnose code  in ibm s vm  vmware supplements the slowest rough corners of virtualization with device drivers for the guest  all are really the same thing  a system call to the hypervisor below  some microkernels such as mach and l  are flexible enough such that  paravirtualization  of guest operating systems is possible     in june       microsoft delivered a new type   hypervisor called hyper v  codenamed  viridian  and previously referred to as  windows server virtualization    the design features os integration at the lowest level    versions of windows beginning with windows vista include extensions to boost performance when running on top of the hyper v hypervisor     embedded hypervisors  targeting embedded systems and certain real time operating system  rtos  environments  are designed with different requirements when compared to desktop and enterprise systems  including robustness  security and real time capabilities  the resource constrained nature of many embedded systems  especially battery powered mobile systems  imposes a further requirement for small memory size and low overhead  finally  in contrast to the ubiquity of the x   architecture in the pc world  the embedded world uses a wider variety of architectures and less standardized environments  support for virtualization requires memory protection  in the form of a memory management unit or at least a memory protection unit  and a distinction between user mode and privileged mode  which rules out most microcontrollers  this still leaves x    mips  arm and powerpc as widely deployed architectures on medium  to high end embedded systems       as manufacturers of embedded systems usually have the source code to their operating systems  they have less need for full virtualization in this space  instead  the performance advantages of paravirtualization make this usually the virtualization technology of choice  nevertheless  arm and mips have recently added full virtualization support as an ip option and has included it in their latest high end processors and architecture versions  such as arm cortex a   mpcore and armv  el      other differences between virtualization in server desktop and embedded environments include requirements for efficient sharing of resources across virtual machines  high bandwidth  low latency inter vm communication  a global view of scheduling and power management  and fine grained control of information flows       the use of hypervisor technology by malware and rootkits installing themselves as a hypervisor below the operating system can make them more difficult to detect because the malware could intercept any operations of the operating system  such as someone entering a password  without the anti malware software necessarily detecting it  since the malware runs below the entire operating system   implementation of the concept has allegedly occurred in the subvirt laboratory rootkit  developed jointly by microsoft and university of michigan researchers    as well as in the blue pill malware package  however  such assertions have been disputed by others who claim that it would be possible to detect the presence of a hypervisor based rootkit       in       researchers from microsoft and north carolina state university demonstrated a hypervisor layer anti rootkit called hooksafe that can provide generic protection against kernel mode rootkits        