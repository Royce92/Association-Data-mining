 openvms is a computer operating system for use in general purpose computing  it is the successor to the vms operating system  vax    vms  vax vms   that was produced by digital equipment corporation since      for its series of vax    minicomputers and its line of desktop workstations  dec alpha   the name vms is derived from virtual memory system  according to one of its principal architectural features  openvms also runs on the itanium based families of computers     openvms is a proprietary operating system  however  the source code is available for purchase   thus  it is not considered open source software     openvms contains a graphical user interface  gui   a feature that was not available on the original vax    vms system  but was added for the vaxstation systems  dec became one of the three top selling workstation manufacturers  with models spanning the     s and     s  previously  the operating system was exclusively used and managed from crt terminals  such as the vt     that provide serial data communications and screen oriented display features  software for axp based systems was promoted by digital s association of software and application partners program  asap   and could be found in the extensive alpha applications catalog   axp vms supported opengl  and accelerated graphics port  agp  graphics adapters     openvms is a multi user  multiprocessing virtual memory based operating system  os  designed for use in time sharing  batch processing  and transaction processing  when process priorities are suitably adjusted  it may approach real time operating system characteristics  the system offers high availability through clustering  and the ability to distribute the system over multiple physical machines  this allows the system to be tolerant against disasters that may disable individual data processing facilities     openvms commercialized many features that are now considered standard requirements for any high end server operating system  these include     enterprise class environments typically select and use openvms for various purposes including as a mail server  network services  manufacturing or transportation control and monitoring  critical applications and databases  and particularly environments where system uptime and data access is critical  system up times of a decade or more   have been reported  and features such as rolling upgrades and clustering allow clustered applications and data to remain continuously accessible while operating system software and hardware maintenance and upgrades are performed  or when a whole data center is destroyed  customers using openvms include banks and financial services  hospitals and healthcare  network information services  and large scale industrial manufacturers of various products             in april       digital equipment corporation embarked on a hardware project  code named star  to design a    bit virtual address extension to its pdp    computer line  a companion software project  code named starlet  was started in june      to develop a totally new operating system  based on rsx   m  for the star family of processors  these two projects were tightly integrated from the beginning  gordon bell   was the vp lead on the vax hardware and its architecture  roger gourd was the project lead for the starlet program  with software engineers dave cutler  who would later lead development of microsoft s windows nt   dick hustvedt  and peter lippman acting as the technical project leaders  each having responsibility for a different area of the operating system  the star and starlet projects culminated in the vax        computer and the vax    vms operating system  the starlet name survived in vms as a name of several of the main system libraries  including starlet olb and starlet mlb     over the years the name of the product has changed  in      it was renamed  with version     release  to vax vms  at the same time as the vax    computer was renamed to simply vax   with the introduction of the microvax range such as the microvax i  microvax ii and microvax      in the mid to late     s  digital released microvms versions specifically targeted for these platforms which had much more limited memory and disk capacity  e g  the smallest microvax      had a   mb rd   hard disk and a maximum of  mb of ram  and its cpu had to emulate some of the vax floating point instructions in software  microvms kits were released for vax vms     to     on tk   tapes and rx   floppy disks  but discontinued with vax vms      in      it was renamed again to openvms to indicate its support for industry standards such as posix and unix compatibility  and to drop the hardware connection as the port to digital s    bit alpha risc processor was in process  the openvms name first appeared after the version       release     the vms port to alpha resulted in the creation of a second and separate source code libraries  based on a source code management tool known as vde  for the vax    bit source code library and a second and new source code library for the alpha  and the subsequent itanium port     bit architectures       saw the release of the first version of openvms for alpha axp systems  designated openvms axp v     the decision to use the   x version numbering stream for the pre production quality releases of openvms axp caused confusion for some customers and was not repeated in the next platform port to the itanium     in       with the release of openvms version      feature  and version number  parity between the vax and alpha variants was achieved  this was the so called functional equivalence   release  in the marketing materials of the time  some features were missing however  e g  based shareable images  which were implemented in later versions  subsequent version numberings for the vax and alpha variants of the product have remained consistent through v     though alpha subsequently diverged with the availability of the v    and v    releases       in       just prior to its acquisition by hewlett packard  compaq announced the port of openvms to the intel itanium architecture    this port was accomplished using source code maintained in common within the openvms alpha source code library  with conditional and additional modules where changes specific to itanium were required  the openvms alpha pool was chosen as the basis of the port as it was significantly more portable than the original openvms vax source code  and because the alpha source code pool was already fully    bit capable  unlike the vax source code pool   with the alpha port  many of the vax hardware specific dependencies had been previously moved into the alpha srm firmware for openvms  features necessary for openvms were then moved from srm into openvms i   as part of the itanium port       unlike the port from vax to alpha  in which a snapshot of the vax code base circa v        was used as the basis for the alpha release and the    bit source code pool then diverged  the openvms alpha and i    itanium  versions of openvms are built and maintained using a common source code library and common tools  the core software source code control system used for openvms is the vms development environment  vde        two pre production releases  openvms i   v    and v     were available on june          and on december           these releases were intended for hp organizations and third party vendors involved with porting software packages to openvms i       the following are recent openvms i   releases     clusters over tcp ip    openvms uses the decwindows motif user interface  based on cde  layered on top of openvms s x   compliant windowing system      older versions of vms instead used a proprietary window system known as vws uis       openvms supports clustering  first called vaxcluster and later vmscluster   where multiple systems share disk storage  processing  job queues and print queues  and are connected either by proprietary specialized hardware  cluster interconnect  or an industry standard lan  usually ethernet   a lan based cluster is often called a lavc  for local area network vmscluster  and allows  among other things  bootstrapping a possibly diskless satellite node over the network using the system disk of a bootnode     vaxcluster support was first added in vms version    which was released in       this version only supported clustering over ci  later releases of version   supported clustering over lan  lavc   and support for lavc was improved in vms version    released in          mixtures of cluster interconnects and technologies are permitted  including gigabit ethernet  gbe   scsi  fddi  dssi  ci and memory channel adapters     openvms supports up to    nodes in a single cluster  and allows mixed architecture clusters  where vax and alpha systems  or alpha and itanium systems can co exist in a single cluster  various organizations have demonstrated triple architecture clusters and cluster configurations with up to     nodes  but these configurations are not supported by hp      unlike many other clustering solutions  vmscluster offers transparent and fully distributed read write with record level locking  which means that the same disk and even the same file can be accessed by several cluster nodes at once  the locking occurs only at the level of a single record of a file  which would usually be one line of text or a single record in a database  this allows the construction of high availability multiply redundant database servers     cluster connections can span upwards of     miles  allowing member nodes to be located in different buildings on an office campus  or in different cities     host based volume shadowing allows volumes  of the same or of different sizes  to be shadowed  mirrored  across multiple controllers and multiple hosts  allowing the construction of disaster tolerant environments     full access into the distributed lock manager  dlm  is available to application programmers  and this allows applications to coordinate arbitrary resources and activities across all cluster nodes  this includes file level coordination  but the resources and activities and operations that can be coordinated with the dlm are completely arbitrary     openvms v    offers advances in clustering technology  including the use of industry standard tcp ip networking to bring efficiencies to cluster interconnect technology  cluster over tcp ip is supported in openvms version      which was released in          with the supported capability of rolling upgrades and multiple system disks  cluster configurations can be maintained on line and upgraded incrementally  this allows cluster configurations to continue to provide application and data access while a subset of the member nodes are upgraded to newer software versions       openvms has a very feature rich file system  with support for stream and record oriented io  acls  and file versioning  the typical user and application interface into the file system is the rms       openvms represents system time as the    bit number of     nanosecond intervals  that is  ten million units per second  also known as a  clunk       since the epoch  the epoch of openvms is midnight preceding november           which is the start of modified julian day numbering  the clock is not necessarily updated every     ns  for example  systems with a    xa hz interval timer simply add         to the value every hundredth of a second  the operating system includes a mechanism to adjust for hardware timekeeping drift  when calibrated against a known time standard  it easily achieves an accuracy better than        all openvms hardware platforms derive timekeeping from an internal clock not associated with the ac supply power frequency     while the system is shut down  time is kept by a time of year   toy   hardware clock  this clock keeps time to a lower resolution  perhaps   second  and generally  a lower accuracy  often        versus         when the system is restarted  the vms    bit time value is recomputed based on the time kept by the toy clock and the last recorded year  stored on the system disk      the     nanosecond granularity implemented within openvms and the    bit absolute time representation  the sign bit indicates absolute time when clear and relative time when set  should allow openvms trouble free time computations up to    jul                    at this instant  all clocks and time keeping operations in openvms will suddenly fail  since the counter will overflow and start from zero again     though the native openvms time format can range far into the future  applications based on the c runtime library will likely encounter timekeeping problems beyond january          due to the year      problem  many components and applications may also encounter field length related date problems at year        see the year        problem        the common language programming environment is described in the openvms calling standard and the openvms programming concepts manuals    this provides mixed language calls  and a set of language specific  run time library  rtl   and system service routines  the language calls and the rtls are implemented in user mode shareable images  while the system services calls are generally part of the operating system  or part of privileged mode code  this distinction between languages and rtls and system services was once fairly clean and clear  but the implementations and specifics have become rather more murky over the years     various utilities and tools are integrated  as are various add on languages and tools       many programming examples are available via the openvms faq       the vms debugger supports all dec compilers and many third party languages  it allows breakpoints  watchpoints and interactive runtime program debugging either using a command line or graphical user interface  openvms debugger manual    among openvms s notable features is the common language environment  a strictly defined standard that specifies calling convention for functions and routines  including use of stacks  registers  etc   independently of programming language  because of this  it is possible to call a routine written in one language  e g  fortran  from another  e g  cobol   without needing to know the implementation details of the target language  openvms itself is implemented in a variety of different languages  primarily bliss  vax macro and c   per comp os vms newsgroup postings from members of hp openvms engineering   and the common language environment and calling standard supports freely mixing these languages  and ada  pl i  fortran  basic  and others  this is in contrast to a system such as unix  which is implemented nearly entirely in the c language     for details on these compilers and libraries  see the language manuals available at openvms documentation     macro    an assembler on openvms vax  and a compiler on openvms alpha and on openvms i    is available within and integrated into openvms  bliss compilers are available for download from the openvms freeware  as are various ports of perl  php  ruby and other languages  java is available from the hp java website  c  fortran and other languages are commercial products  and are available for purchase     openvms provides various security features and mechanisms  including security identifiers  resource identifiers  subsystem identifiers  acls  and detailed security auditing and alarms  specific versions evaluated at dod ncsc class c  and  with the sevms security enhanced services support  at ncsc class b   per the ncsc rainbow series  openvms also holds an itsec e  rating  for details on these ratings and the specific associated openvms versions and ratings  see the ncsc and common criteria pages  and the associated product listings    passwords are hashed using the purdy polynomial     openvms supports the following industry standard tools and applications citation needed    the openvms operating documentation for various recent releases and for various core openvms layered products is available online at the hp website http   www hp com go openvms doc      software product description  spd  documents for many openvms related products  and for openvms itself  are available at http   h      www  hp com info spd   spds are introductory and legal descriptions of various products  listing the various supported capabilities and product features     the openvms frequently asked questions  faq  contains information and pointers associated with openvms  and is available in various formats at http   www hoffmanlabs org vmsfaq      the current openvms release are openvms v    for alpha and integrity servers  and openvms v    for vax servers     hp provides current version support  cvs  and prior version support  pvs  for various openvms releases  the openvms roadmap guarantees pvs status for specific releases  v       v     h   v     v     h   v       until       and only then ending with    month s prior notice  cvs is provided for the current release and for the immediately prior release     on july           vms software  inc   vsi  announced that hp named vsi as the sole developer of future versions of the openvms operating system and its layered product components  new releases are planned to support the latest itanium hardware and a port to x        vsi s initial openvms product release road map has been made available at http   www vmssoftware com news announcement rm   vsi has assembled a massachusetts  usa based team of veteran openvms developers  many harkening back to the core dec team responsible for the initial and ongoing development of openvms       the following are some of the industry standards claimed in the openvms software product description  spd  document     despite being a proprietary commercial operating system  in      openvms and a number of layered products were made available free of charge for hobbyist  non commercial use as part of the openvms hobbyist program      since then  several companies producing openvms software have made their products available under the same terms  such as process software   and mvp systems       in       hp staff took over the administration of the hobbyist licences  registration was simplified and remained zero cost  the process from registering to receiving product authorisation keys may take only a few hours at best  software kits for operating system and layered products were made available on request via ftp download  previously it had to be shipped on cd which was chargeable   this process is not fully automatic and requires authorisation by hp hobbyist program staff     a number of hobbyist systems are open to the public  including the deathrow cluster       an open source operating system following vms conventions called freevms is in development    though no official releases have been made since       freevms supports the x      architecture using an l  microkernel       openvms related terms and acronyms include    