 a computing platform is  in the most general sense  whatever pre existing environment a piece of software is designed to run within  obeying its constraints  and making use of its facilities  typical platforms include a hardware architecture  an operating system  os   and runtime libraries      binary executables have to be compiled for a specific hardware platform  since different central processor units have different machine codes  in addition  operating systems and runtime libraries allow re use of code and provide abstraction layers which allow the same high level source code to run on differently configured hardware  for example  there are many kinds of data storage device  and any individual computer can have a different configuration of storage devices  but the application is able to call a generic save or write function provided by the os and runtime libraries  which then handle the details themselves  a platform can be seen both as a constraint on the application development process   the application is written for such and such a platform   and an assistance to the development process  in that they provide low level functionality ready made             platforms may also include     some architectures have multiple layers  with each layer acting as a platform to the one above it  in general  a component only has to be adapted to the layer immediately beneath it  for instance  a java program has to be written to use the java virtual machine  jvm  and associated libraries as a platform  but does not have to be adapted to run for the windows  linux or macintosh os platforms  however  the jvm  the layer beneath the application  does have to be built separately for each os      ordered roughly  from more common types to less common types  